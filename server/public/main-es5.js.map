{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/column/column.component.html","src/app/db-connect/db-connect.component.html","src/app/dialogs/add/add.dialog.html","src/app/dialogs/delete/delete.dialog.html","src/app/dialogs/displayTable/displayTable.dialog.html","src/app/dialogs/edit/edit.dialog.html","src/app/git-token/git-token.component.html","src/app/hr-document-generator/hr-document-generator.component.html","src/app/list-tables/list-tables.component.html","src/app/new-table/new-table.component.html","src/app/relations/child-to-parents/child-to-parents.component.html","src/app/relations/parent-to-childs/parent-to-childs.component.html","src/app/relations/relations.component.html","src/app/tables-view/tables-view.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.less","src/app/app.component.ts","src/app/app.module.ts","src/app/column/column.component.less","src/app/column/column.component.ts","src/app/db-connect/db-connect.component.less","src/app/db-connect/db-connect.component.ts","src/app/dialogs/add/add.dialog.component.ts","src/app/dialogs/add/add.dialog.css","src/app/dialogs/delete/delete.dialog.component.ts","src/app/dialogs/delete/delete.dialog.css","src/app/dialogs/displayTable/displayTable.dialog.component.ts","src/app/dialogs/displayTable/displayTable.dialog.css","src/app/dialogs/edit/edit.dialog.component.ts","src/app/dialogs/edit/edit.dialog.css","src/app/from-number-type-to-erd-structure.pipe.ts","src/app/from-table-name-to-title.pipe.ts","src/app/git-token/git-token.component.less","src/app/git-token/git-token.component.ts","src/app/hr-document-generator/hr-document-generator.component.less","src/app/hr-document-generator/hr-document-generator.component.ts","src/app/list-tables/list-tables.component.less","src/app/list-tables/list-tables.component.ts","src/app/new-table/new-table.component.less","src/app/new-table/new-table.component.ts","src/app/relations/child-to-parents/child-to-parents.component.less","src/app/relations/child-to-parents/child-to-parents.component.ts","src/app/relations/parent-to-childs/parent-to-childs.component.less","src/app/relations/parent-to-childs/parent-to-childs.component.ts","src/app/relations/relations.component.less","src/app/relations/relations.component.ts","src/app/remove-action-col.pipe.ts","src/app/services/data.service.ts","src/app/services/generator.service.ts","src/app/services/getter.service.ts","src/app/services/hr.service.ts","src/app/table-value.pipe.ts","src/app/tables-view/tables-view.component.less","src/app/tables-view/tables-view.component.ts","src/entities/tableGeneratorStructure.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n\\n<style>\\n  :host {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 14px;\\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  h1,\\n  h2,\\n  h3,\\n  h4,\\n  h5,\\n  h6 {\\n    margin: 8px 0;\\n  }\\n\\n  p {\\n    margin: 0;\\n  }\\n\\n  .spacer {\\n    flex: 1;\\n  }\\n\\n  .toolbar {\\n    height: 60px;\\n    margin: -8px;\\n    display: flex;\\n    align-items: center;\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n  }\\n\\n  .toolbar img {\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar #twitter-logo {\\n    height: 40px;\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar #twitter-logo:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .content {\\n    display: flex;\\n    margin: 32px auto;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  svg.material-icons {\\n    height: 24px;\\n    width: auto;\\n  }\\n\\n  svg.material-icons:not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .card svg.material-icons path {\\n    fill: #888;\\n  }\\n\\n  .card-container {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    margin-top: 16px;\\n  }\\n\\n  .card {\\n    border-radius: 4px;\\n    border: 1px solid #eee;\\n    background-color: #fafafa;\\n    height: 40px;\\n    width: 200px;\\n    margin: 0 8px 16px;\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    transition: all 0.2s ease-in-out;\\n    line-height: 24px;\\n  }\\n\\n  .card-container .card:not(:last-child) {\\n    margin-right: 0;\\n  }\\n\\n  .card.card-small {\\n    height: 16px;\\n    width: 168px;\\n  }\\n\\n  .card-container .card:not(.highlight-card) {\\n    cursor: pointer;\\n  }\\n\\n  .card-container .card:not(.highlight-card):hover {\\n    transform: translateY(-3px);\\n    box-shadow: 0 4px 17px rgba(black, 0.35);\\n  }\\n\\n  .card-container .card:not(.highlight-card):hover .material-icons path {\\n    fill: rgb(105, 103, 103);\\n  }\\n\\n  .card.highlight-card {\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n    border: none;\\n    width: auto;\\n    min-width: 30%;\\n    position: relative;\\n  }\\n\\n  .card.card.highlight-card span {\\n    margin-left: 60px;\\n  }\\n\\n  svg#rocket {\\n    width: 80px;\\n    position: absolute;\\n    left: -10px;\\n    top: -24px;\\n  }\\n\\n  svg#rocket-smoke {\\n    height: 100vh;\\n    position: absolute;\\n    top: 10px;\\n    right: 180px;\\n    z-index: -10;\\n  }\\n\\n  a,\\n  a:visited,\\n  a:hover {\\n    color: #1976d2;\\n    text-decoration: none;\\n  }\\n\\n  a:hover {\\n    color: #125699;\\n  }\\n\\n  .terminal {\\n    position: relative;\\n    width: 80%;\\n    max-width: 600px;\\n    border-radius: 6px;\\n    padding-top: 45px;\\n    margin-top: 8px;\\n    overflow: hidden;\\n    background-color: rgb(15, 15, 16);\\n  }\\n\\n  .terminal::before {\\n    content: \\\"\\\\2022 \\\\2022 \\\\2022\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 4px;\\n    background: rgb(58, 58, 58);\\n    color: #c2c3c4;\\n    width: 100%;\\n    font-size: 2rem;\\n    line-height: 0;\\n    padding: 14px 0;\\n    text-indent: 4px;\\n  }\\n\\n  .terminal pre {\\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n    color: white;\\n    padding: 0 1rem 1rem;\\n    margin: 0;\\n  }\\n\\n  .circle-link {\\n    height: 40px;\\n    width: 40px;\\n    border-radius: 40px;\\n    margin: 8px;\\n    background-color: white;\\n    border: 1px solid #eeeeee;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n    transition: 1s ease-out;\\n  }\\n\\n  .circle-link:hover {\\n    transform: translateY(-0.25rem);\\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  footer {\\n    margin-top: 8px;\\n    display: flex;\\n    align-items: center;\\n    line-height: 20px;\\n  }\\n\\n  footer a {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  .github-star-badge {\\n    color: #24292e;\\n    display: flex;\\n    align-items: center;\\n    font-size: 12px;\\n    padding: 3px 10px;\\n    border: 1px solid rgba(27,31,35,.2);\\n    border-radius: 3px;\\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\\n    margin-left: 4px;\\n    font-weight: 600;\\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\\n  }\\n\\n  .github-star-badge:hover {\\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\\n    border-color: rgba(27,31,35,.35);\\n    background-position: -.5em;\\n  }\\n\\n  .github-star-badge .material-icons {\\n    height: 16px;\\n    width: 16px;\\n    margin-right: 4px;\\n  }\\n\\n  svg#clouds {\\n    position: fixed;\\n    bottom: -160px;\\n    left: -230px;\\n    z-index: -10;\\n    width: 1920px;\\n  }\\n\\n\\n  /* Responsive Styles */\\n  @media screen and (max-width: 767px) {\\n\\n    .card-container > *:not(.circle-link) ,\\n    .terminal {\\n      width: 100%;\\n    }\\n\\n    .card:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card span {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\\n</style>\\n\\n<!-- Toolbar -->\\n<div class=\\\"toolbar\\\" role=\\\"banner\\\">\\n\\n  <img  routerLink=\\\"/**\\\" height=\\\"40\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/compLogo.svg\\\">\\n  <span>Welcome</span>\\n    <div class=\\\"spacer\\\"></div>\\n    <a href=\\\"https://github.com//_server2\\\" title=\\\"github\\\"><img  routerLink=\\\"/**\\\" height=\\\"20\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/GitHubIcon.png\\\" style=\\\"margin-top: 1px;\\\">\\n    </a>\\n   \\n  <a  routerLink=\\\"/new-table\\\" title=\\\"create a new table\\\">\\n    <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">library_add</mat-icon>\\n  </a>\\n  <a  routerLink=\\\"/hr-docs\\\" title=\\\"hr docs\\\">\\n    <img height=\\\"24\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/description.svg\\\">\\n  </a>\\n \\n</div>\\n\\n<div class=\\\"content\\\" role=\\\"main\\\">\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","export default \"<div *ngIf=\\\"!submited\\\" class=\\\"column-container\\\">\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Enter column name\\\" [(ngModel)]=\\\"name\\\" [formControl]=\\\"colName\\\" required />\\n    <mat-error *ngIf=\\\"colName.invalid\\\">{{ getErrorMessage(\\\"colName\\\") }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Type\\\"  [(ngModel)]=\\\"type\\\">\\n      <mat-option *ngFor=\\\"let item of colTypes\\\" value=\\\"{{item}}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-slide-toggle [(ngModel)]=\\\"nullable\\\">Nullable</mat-slide-toggle>\\n  <mat-slide-toggle [(ngModel)]=\\\"isPk\\\">Primary Key</mat-slide-toggle>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Parent Table\\\" [(ngModel)]=\\\"tblParent\\\" (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\">\\n      <mat-option *ngFor=\\\"let item of parentTablesList\\\" value=\\\"{{ item }}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Parent Column\\\" [(ngModel)]=\\\"colParent\\\">\\n      <mat-option *ngFor=\\\"let item of parentTableColumnsNames\\\" value=\\\"{{ item }}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <button mat-button (click)=\\\"submitColumn()\\\" color=\\\"primary\\\">add</button>\\n\\n</div>\\n\\n\\n\\n\"","export default \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Enter your db connection</h3>\\n    <form class=\\\"db-form\\\" (ngSubmit)=\\\"onDbSubmit()\\\">\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Host</mat-label>\\n            <input matInput [formControl]=\\\"dbHost\\\" placeholder=\\\"Enter the db host\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Name</mat-label>\\n            <input matInput [formControl]=\\\"dbName\\\" placeholder=\\\"Enter the db name\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db User</mat-label>\\n            <input matInput [formControl]=\\\"dbUser\\\" placeholder=\\\"Enter the db user\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Password</mat-label>\\n            <input matInput [formControl]=\\\"dbPassword\\\" placeholder=\\\"Enter the db password\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <div mat-dialog-actions>\\n            <button mat-button> Save </button>\\n            <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n          </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Add new Column</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"(submit)\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\"  name=\\\"name\\\" required></textarea>\\n        <!--mat-error-- *ngIf=\\\"formControl.invalid\\\">{{\\n          getErrorMessage()\\n        }}</!--mat-error-->\\n      </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Choose Type\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\">\\n        <mat-option *ngFor=\\\"let item of colTypes\\\" value=\\\"{{ item }}\\\" name=type>{{\\n          item\\n        }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-slide-toggle [(ngModel)]=\\\"nullable\\\" name=false>Nullable</mat-slide-toggle>\\n      <mat-slide-toggle [(ngModel)]=\\\"isPk\\\" name=false>Primary Key</mat-slide-toggle>\\n    </div>\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Choose Parent Table\\\"\\n          [(ngModel)]=\\\"tblParent\\\"\\n          (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\"\\n          name= \\\"table parent name\\\"\\n         [ngModelOptions]=\\\"{standalone: true}\\\">\\n          <mat-option\\n            *ngFor=\\\"let item of parentTablesList\\\"\\n            value=\\\"{{ item }}\\\"\\n            >{{ item }}</mat-option\\n          >\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Choose Parent Column\\\" [(ngModel)]=\\\"colParent\\\" name= \\\"column parent name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n          <mat-option\\n            *ngFor=\\\"let item of parentTableColumnsNames\\\"\\n            value=\\\"{{ item }}\\\"\\n            >{{ item }}</mat-option\\n          >\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div mat-dialog-actions>\\n      <button\\n        mat-button\\n        [type]=\\\"submit\\\"\\n        [disabled]=\\\"!formControl.valid\\\"\\n        [mat-dialog-close]=\\\"1\\\"\\n        (click)=\\\"confirmAdd()\\\"\\n      >\\n        Save\\n      </button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Are you sure?</h3>\\n  <div mat-dialog-content>\\n    Name: {{data.name}}\\n    <p></p>\\n    Type: {{data.type}}\\n    <p></p>\\n    Is Primary Key: {{data.isPk}}\\n    <p></p>\\n    Nullable : {{data.nullable}}\\n    <p></p>\\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button mat-button [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">Delete</button>\\n    <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Table: {{data.tblName | fromTableNameToTitle}}</h3>\\n  <div mat-dialog-content>\\n      <table>\\n          <tr>\\n            <th>Name</th>\\n            <th>Type</th>\\n            <th>Is Primary Key</th>\\n            <th>Nullable</th>\\n          </tr>\\n          <tr *ngFor=\\\"let item of data.columns\\\">\\n            <td>{{item.name}}</td>\\n            <td>{{item.type}} </td>\\n            <td>{{item.isPk}}</td>\\n            <td>{{item.allowNull}}</td>\\n          </tr>\\n        </table>\\n    \\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Exit</button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Edit Column: {{ name }}</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"(submit)\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required></textarea>\\n        <!--mat-error-- *ngIf=\\\"formControl.invalid\\\">{{\\n          getErrorMessage()\\n        }}</!--mat-error-->\\n      </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"{{ type }}\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\" >\\n        <mat-option *ngFor=\\\"let item of colTypes\\\" [value]=\\\"item\\\" >{{ item }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-slide-toggle [(ngModel)]=\\\"nullable\\\" name=\\\"nullable\\\">Nullable</mat-slide-toggle>\\n      <mat-slide-toggle [(ngModel)]=\\\"isPk\\\" name=\\\"isPk\\\">Primary Key</mat-slide-toggle>\\n    </div>\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{ tblParent }}\\\" [(ngModel)]=\\\"tblParent\\\" (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\" name=\\\"tblParent\\\">\\n          <mat-option *ngFor=\\\"let item of parentTablesList\\\" [value]=\\\"item\\\">{{ item }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{ colParent }}\\\" [(ngModel)]=\\\"colParent\\\" name=\\\"colParent\\\">\\n          <mat-option *ngFor=\\\"let item of parentTableColumnsNames\\\" [value]=\\\"item\\\">{{ item }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div mat-dialog-actions>\\n      <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Enter your github token</h3>\\n    <div mat-dialog-actions>\\n        <mat-form-field class=\\\"git-full-width\\\">\\n            <mat-label>Github token</mat-label>\\n            <input matInput [formControl]=\\\"gitToken\\\" placeholder=\\\"Enter git token\\\">\\n        </mat-form-field>\\n        <button\\n          mat-button            \\n          (click)=\\\"onDbSubmit()\\\"\\n        >\\n          Save\\n        </button>\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n      </div>\\n</div>\"","export default \"<div class=\\\"hr-doc-section\\\">\\n  <div *ngIf=\\\"hrDocTypsArr\\\">\\n    <h4>Welcome to Hr Docs</h4>\\n    <mat-form-field>\\n      <mat-label>Hr Document Type</mat-label>\\n      <mat-select [(value)]=\\\"hrDocTypeSelected\\\" (selectionChange)=\\\"docTypeChange(hrDocTypeSelected)\\\">\\n        <mat-option *ngFor=\\\"let hrDocType of hrDocTypsArr\\\" [value]=\\\"hrDocType\\\">\\n          {{hrDocType.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div></div>\\n\\n    <mat-form-field *ngIf=\\\"hrSubSectionTemplateArr\\\">\\n      <mat-label>Hr Subsection Template</mat-label>\\n      <mat-select [(value)]=\\\"hrSubSectionTemplateSelected\\\" (selectionChange)=\\\"subsectionTamplateChange(hrSubSectionTemplateSelected)\\\">\\n        <mat-option *ngFor=\\\"let hrSubSectionTemplate of hrSubSectionTemplateArr\\\" [value]=\\\"hrSubSectionTemplate\\\">\\n          {{hrSubSectionTemplate.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div></div>\\n\\n\\n    <mat-form-field *ngIf=\\\"hrSubsectionArr\\\">\\n      <mat-label>Filter Subsection</mat-label>\\n      <input matInput (keyup)=\\\"subsectionFilter($event)\\\" placeholder=\\\"Ex. ium\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"hrSubsectionArr\\\">\\n      <mat-table #table [dataSource]=\\\"hrSubsectionDataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n        <ng-container matColumnDef={{col}} *ngFor=\\\"let col of hrSubsectionColumns | removeActionCol \\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col}}. </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element[col]}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"viewQuestions\\\">\\n        <mat-header-cell  *matHeaderCellDef > Questions </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let i = index\\\">\\n          <button mat-icon-button color=\\\"primary\\\">\\n            <mat-icon aria-label=\\\"View Questions\\\">visibility</mat-icon>\\n          </button>\\n        </mat-cell>\\n      </ng-container>\\n\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"hrSubsectionColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: hrSubsectionColumns;\\\"></tr>\\n      </mat-table>\\n\\n    </div>\\n  </div>\\n\\n</div>\"","export default \"<div class=\\\"tabel-view-body\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        (keyup)=\\\"applyFilter($event.target.value)\\\"\\n        placeholder=\\\"Search A table\\\"\\n      />\\n    </mat-form-field>\\n    <mat-accordion>\\n      <mat-expansion-panel\\n        *ngFor=\\\"let item of tablesList; let i = index\\\"\\n        [attr.data-index]=\\\"i\\\"\\n        (opened)=\\\"getTableStructure(item.name, i); item.openeds = true; loaded[i] = false;\\\"\\n        (closed)=\\\"item.openeds = false\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{ item.name }}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            {{ item.name | fromTableNameToTitle }}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <mat-spinner *ngIf=\\\"item.openeds && item.colSource.length === 0\\\" ></mat-spinner>\\n        <table *ngIf=\\\"item.colSource.length\\\" mat-table matSort [dataSource]=\\\"item.colSource\\\">\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"type\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"nullable\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nullable</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              <section class=\\\"example-section\\\">\\n                <mat-slide-toggle\\n                  class=\\\"example-margin\\\"\\n                  [color]=\\\"'accent'\\\"\\n                  [checked]=\\\"element.nullable\\\"\\n                >\\n                </mat-slide-toggle>\\n              </section>\\n            </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"isPk\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Is Primary Key\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              <section class=\\\"example-section\\\">\\n                <mat-slide-toggle\\n                  class=\\\"example-margin\\\"\\n                  [color]=\\\"'accent'\\\"\\n                  [checked]=\\\"element.isPk\\\"\\n                >\\n                </mat-slide-toggle>\\n              </section>\\n            </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"relatedToTable\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>relatedToTable</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.relatedToTable }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"atColumn\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>atColumn</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.atColumn }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"fkName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Foreign key Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fkName }}</td>\\n          </ng-container>\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n        </table>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\"","export default \"<div>\\n  <div class=\\\"create-table-container\\\"></div>\\n  <mat-form-field class=\\\"example-container\\\">\\n    <input matInput placeholder=\\\"Enter Table Name\\\" [formControl]=\\\"tableName\\\" (input)=\\\"onTableNameChange($event.target.value)\\\" required />\\n    <mat-error *ngIf=\\\"tableName.invalid\\\">{{ getErrorMessage(\\\"tableName\\\") }}</mat-error>\\n  </mat-form-field>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColPrimaryKey\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">vpn_key</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColPrimaryKey\\\" (click)=\\\"generateCol('primaryKey')\\\">\\n      Generate Primary Key\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColCreatedAt || !generatColCreatedBy\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">create</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColCreatedAt\\\" (click)=\\\"generateCol('createdAt')\\\">Generate Created At<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">access_time</mat-icon></button>\\n    <button mat-button *ngIf=\\\"!generatColCreatedBy\\\" (click)=\\\"generateCol('createdBy')\\\">Generate Created By<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\"> person</mat-icon></button>\\n  </div>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColUpdatedAt || !generatColUpdatedBy\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">build</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColUpdatedAt\\\" (click)=\\\"generateCol('updatedAt')\\\">Generate Updated At<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">access_time</mat-icon></button>\\n    <button mat-button *ngIf=\\\"!generatColUpdatedBy\\\" (click)=\\\"generateCol('updatedBy')\\\">Generate Updated By<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">person</mat-icon></button>\\n  </div>\\n\\n  <mat-table #table class=\\\"table-container\\\" matSort [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"nullable\\\">\\n      <th mat-header-cell *matHeaderCellDef>Nullable</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <section class=\\\"example-section\\\">\\n          <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"'accent'\\\" (change)=\\\"element.nullable = $event.checked\\\" [checked]=\\\"element.nullable\\\"> </mat-slide-toggle>\\n        </section>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"isPk\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Is Primary Key\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <section class=\\\"example-section\\\">\\n          <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"'accent'\\\" (change)=\\\"element.isPk = $event.checked\\\" [checked]=\\\"element.isPk\\\"> </mat-slide-toggle>\\n        </section>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"relatedToTable\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Related To Table\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        {{ element.constraint?.tblParent }}\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"atColumn\\\">\\n      <th mat-header-cell *matHeaderCellDef>At Column</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        {{ element.constraint?.colParent }}\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"fkName\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Foreign key Name\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.constraint?.name }}</td>\\n    </ng-container>\\n    <!-- actions -->\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew(undefined)\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let row; let i = index\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, row.name, row.type, row.nullable, row.isPk)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(i, row.name, row.type, row.nullable, row.isPk, row.relatedToTable, row.atColumn, row.fkName)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n  </mat-table>\\n\\n  <div [hidden]=\\\"!exampleDatabase.dataChange.value.length\\\">\\n    <mat-paginator class=\\\"paginator-container\\\" #paginator [length]=\\\"exampleDatabase.dataChange.value.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"> </mat-paginator>\\n  </div>\\n\\n  <button *ngIf=\\\"exampleDatabase.dataChange.value.length && !pendingRequest\\\" class=\\\"generate-table-btn\\\" mat-button (click)=\\\"generateTable()\\\" color=\\\"red\\\">\\n    generate table\\n  </button>\\n  <mat-spinner *ngIf=\\\"pendingRequest\\\" class=\\\"progress-spinner-btn\\\"></mat-spinner>\\n</div>\\n\"","export default \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <button mat-icon-button disabled></button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n    </mat-tree-node>\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n        <mat-progress-bar *ngIf=\\\"node.isLoading\\\" mode=\\\"indeterminate\\\" class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\n    </mat-tree-node>\\n</mat-tree>\"","export default \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <button mat-icon-button disabled></button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n    </mat-tree-node>\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n        <mat-progress-bar *ngIf=\\\"node.isLoading\\\" mode=\\\"indeterminate\\\" class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\n    </mat-tree-node>\\n</mat-tree>\"","export default \"\"","export default \"<mat-tab-group  mat-stretch-tabs>\\n  <mat-tab label=\\\"List view\\\"> \\n    <app-list-tables></app-list-tables>\\n </mat-tab>\\n  <mat-tab label=\\\"Parent To Childrens\\\"> \\n     <app-parent-to-childs></app-parent-to-childs>\\n  </mat-tab>\\n  <mat-tab label=\\\"Children To Parent\\\">\\n      <app-child-to-parents></app-child-to-parents>\\n  </mat-tab>\\n</mat-tab-group>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewTableComponent } from './new-table/new-table.component';\n\nimport { AppComponent } from './app.component';\nimport { TablesViewComponent } from './tables-view/tables-view.component';\nimport { RelationsComponent } from './relations/relations.component';\nimport { HrDocumentGeneratorComponent } from './hr-document-generator/hr-document-generator.component';\n\n\nconst routes: Routes = [\n  { path: 'new-table', component: NewTableComponent },\n  { path: 'relations', component: RelationsComponent },\n  { path: 'hr-docs', component: HrDocumentGeneratorComponent },\n\n  { path: '**', component: TablesViewComponent },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".toolbar {\\n  background-color: #18516b !important;\\n}\\nmat-list-item:hover mat-icon {\\n  display: block;\\n}\\n:host ::ng-deep a[_ngcontent-mva-c0],\\na[_ngcontent-mva-c0]:visited,\\na[_ngcontent-mva-c0]:hover {\\n  color: black;\\n  text-decoration: none;\\n}\\n.mat-icon {\\n  fill: black;\\n  color: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9hcHAuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FDQ0Y7QURFQTtFQUNJLGNBQUE7QUNBSjtBREdFOzs7RUFDRSxZQUFBO0VBQ0EscUJBQUE7QUNDSjtBREVFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQsIDgxLCAxMDcpICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1saXN0LWl0ZW06aG92ZXIgbWF0LWljb257XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgXG4gIDpob3N0IDo6bmctZGVlcCBhW19uZ2NvbnRlbnQtbXZhLWMwXSwgYVtfbmdjb250ZW50LW12YS1jMF06dmlzaXRlZCwgYVtfbmdjb250ZW50LW12YS1jMF06aG92ZXIge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgXG4gIC5tYXQtaWNvbiB7XG4gICAgZmlsbDogYmxhY2s7XG4gICAgY29sb3I6IGJsYWNrO1xuICB9IiwiLnRvb2xiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg1MTZiICFpbXBvcnRhbnQ7XG59XG5tYXQtbGlzdC1pdGVtOmhvdmVyIG1hdC1pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG46aG9zdCA6Om5nLWRlZXAgYVtfbmdjb250ZW50LW12YS1jMF0sXG5hW19uZ2NvbnRlbnQtbXZhLWMwXTp2aXNpdGVkLFxuYVtfbmdjb250ZW50LW12YS1jMF06aG92ZXIge1xuICBjb2xvcjogYmxhY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5tYXQtaWNvbiB7XG4gIGZpbGw6IGJsYWNrO1xuICBjb2xvcjogYmxhY2s7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DbConnectComponent } from './db-connect/db-connect.component';\nimport { DataService } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  title = ' Erd';\n\n  constructor(public dialog: MatDialog, public dataService: DataService) {\n  }\n\n    ngOnInit() {\n      if (localStorage.getItem('pgConnOptHost') === null) {\n        const dialogRef = this.dialog.open(DbConnectComponent, {\n          data: { 'this.pgConnOpt': '' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n          this.fillPgConectOptionFromLocalStorage();\n        });\n      } else {\n        this.fillPgConectOptionFromLocalStorage();\n      }\n    }\n\n    fillPgConectOptionFromLocalStorage() {\n      this.dataService.pgConnect = {\n        user: localStorage.getItem('pgConnOptUser'),\n        password: localStorage.getItem('pgConnOptPassword'),\n        host: localStorage.getItem('pgConnOptHost'),\n        database: localStorage.getItem('pgConnOptDatabase')\n      };\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TablesViewComponent } from './tables-view/tables-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Angular Material Components\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { FromTableNameToTitlePipe } from './from-table-name-to-title.pipe';\nimport { NewTableComponent } from './new-table/new-table.component';\nimport { ColumnComponent } from './column/column.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AddDialogComponent } from './dialogs/add/add.dialog.component';\nimport { EditDialogComponent } from './dialogs/edit/edit.dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.dialog.component';\nimport { DataService } from './services/data.service';\nimport { FromNumberTypeToErdStructurePipe } from './from-number-type-to-erd-structure.pipe';\nimport { RelationsComponent } from './relations/relations.component';\nimport { ParentToChildsComponent, ParentToChildsDynamicDatabase } from './relations/parent-to-childs/parent-to-childs.component';\nimport { ChildToParentsComponent, ChildToParentsDynamicDatabase } from './relations/child-to-parents/child-to-parents.component';\nimport { DisplayTableDialogComponent } from './dialogs/displayTable/displayTable.dialog.component';\nimport { LocationStrategy, HashLocationStrategy, CommonModule } from '@angular/common';\nimport { ListTablesComponent } from './list-tables/list-tables.component';\nimport { HrDocumentGeneratorComponent } from './hr-document-generator/hr-document-generator.component';\nimport { TableValuePipe } from './table-value.pipe';\nimport { DbConnectComponent } from './db-connect/db-connect.component';\nimport { RemoveActionColPipe } from './remove-action-col.pipe';\nimport { GitTokenComponent } from './git-token/git-token.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TablesViewComponent,\n    FromTableNameToTitlePipe,\n    NewTableComponent,\n    ColumnComponent,\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent,\n    FromNumberTypeToErdStructurePipe,\n    RelationsComponent,\n    ParentToChildsComponent,\n    ChildToParentsComponent,\n    DisplayTableDialogComponent,\n    ListTablesComponent,\n    HrDocumentGeneratorComponent,\n    TableValuePipe,\n    DbConnectComponent,\n    RemoveActionColPipe,\n    GitTokenComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTreeModule,\n    MatSortModule,\n    MatPaginatorModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent,\n    DisplayTableDialogComponent,\n    DbConnectComponent,\n    GitTokenComponent\n  ],\n  providers: [DataService, ParentToChildsDynamicDatabase, ChildToParentsDynamicDatabase,\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: MatDialogRef, useValue: {} }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".column-container {\\n  padding-top: 20px;\\n  display: flex;\\n  flex-direction: row;\\n}\\nmat-form-field {\\n  margin-left: 20px;\\n  margin-right: 10px;\\n}\\n.index-column {\\n  width: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUNDSjtBRENFO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQ0NKO0FERUU7RUFDRSxXQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbHVtbi1jb250YWluZXIge1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICBtYXQtZm9ybS1maWVsZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB9XG5cbiAgLmluZGV4LWNvbHVtbntcbiAgICB3aWR0aDogMjBweDtcbiAgfSIsIi5jb2x1bW4tY29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5tYXQtZm9ybS1maWVsZCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4uaW5kZXgtY29sdW1uIHtcbiAgd2lkdGg6IDIwcHg7XG59XG4iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ErdStructure } from 'src/entities/tableGeneratorStructure';\nimport * as types from 'src/entities/tableGeneratorStructure';\nimport { GetterService } from '../services/getter.service';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.less']\n})\nexport class ColumnComponent implements OnInit {\n  @Output() submitedCol: EventEmitter<types.Column> = new EventEmitter();\n  @Input() receivedCol: types.Column | undefined;\n  @Input() colIndex: number;\n  erdStrct: ErdStructure;\n  colTypes: any[] = [];\n\n  submited: boolean;\nid: number;\n  name: string;\n  type: string;\n  isPk = false;\n  nullable = false;\n  tblParent: string;\n  colParent: string;\n\n  colName = new FormControl('', [Validators.required]);\n  constraint: types.Constraint = undefined;\n\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  constructor(private gtService: GetterService, private dataService: DataService) {}\n\n  ngOnInit() {\n    if (this.receivedCol !== undefined) {\n      this.name = this.receivedCol.name;\n      this.type =  this.receivedCol.type;\n      this.isPk = this.receivedCol.isPk;\n      this.nullable = this.receivedCol.nullable;\n      if (this.receivedCol.constraint !== undefined) {\n        this.name = this.receivedCol.constraint.name;\n        this.tblParent = this.receivedCol.constraint.tblParent;\n        this.colParent = this.receivedCol.constraint.colParent;\n      }\n    }\n\n    this.colTypes = types.TypeScriptTypesArray;\n    this.getParentTablesName('');\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getErrorMessage(fieldName: string) {\n    // tslint:disable-next-line: max-line-length\n    return this[fieldName].hasError('required') ? 'You must enter a ' + fieldName : this[fieldName].hasError(fieldName) ? 'Not a valid ' + fieldName : '';\n  }\n\n  constraintParentTableChange(tblName: string) {\n    console.log(tblName);\n    this.getTableStructure(tblName);\n  }\n\n  submitColumn() {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint =  {\n          name : '',\n          tblParent : this.tblParent,\n          colParent : this.colParent\n        };\n      }\n      this.submited = true;\n      this.submitedCol.emit(col);\n    }\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RiLWNvbm5lY3QvZGItY29ubmVjdC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Component({\n  selector: 'app-db-connect',\n  templateUrl: './db-connect.component.html',\n  styleUrls: ['./db-connect.component.less']\n})\nexport class DbConnectComponent implements OnInit {\n  pgConnect: PGConnectionOption;\n  dbHost = new FormControl(localStorage.getItem('pgConnOptHost'), [Validators.required]);\n  dbName = new FormControl(localStorage.getItem('pgConnOptDatabase'), [Validators.required]);\n  dbUser = new FormControl(localStorage.getItem('pgConnOptUser'), [Validators.required]);\n  dbPassword = new FormControl(localStorage.getItem('pgConnOptPassword'), [Validators.required]);\n\n  constructor(public dialogRef: MatDialogRef<DbConnectComponent>, @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  onDbSubmit() {\n    localStorage.setItem('pgConnOptUser', this.dbUser.value);\n    localStorage.setItem('pgConnOptPassword', this.dbPassword.value);\n    localStorage.setItem('pgConnOptHost', this.dbHost.value);\n    localStorage.setItem('pgConnOptDatabase', this.dbName.value);\n    this.pgConnect = {\n      database: this.dbName.value,\n      host: this.dbHost.value,\n      password: this.dbPassword.value,\n      user: this.dbUser.value\n    };\n    this.dialogRef.close(this.pgConnect);\n  }\n}\n","import { TypeScriptTypesArray } from './../../../entities/tableGeneratorStructure';\nimport { GetterService } from './../../services/getter.service';\nimport { GeneratorService } from './../../services/generator.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Column } from 'src/entities/tableGeneratorStructure';\nimport * as types from 'src/entities/tableGeneratorStructure';\n\n@Component({\n  selector: 'app-add.dialog',\n  templateUrl: '../../dialogs/add/add.dialog.html',\n  styleUrls: ['../../dialogs/add/add.dialog.css']\n})\n\nexport class AddDialogComponent {\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: Column,\n              public dataService: DataService, public gtService: GetterService) {\n\n    console.log(data);\n    this.getParentTablesName('');\n    this.name = data['column'].name;\n    this.type = data['column'].type;\n    this.isPk = data['column'].isPk;\n    this.nullable = data['column'].nullable;\n    if (data['column'].constraint) {\n      this.tblParent = data['column'].constraint.tblParent,\n        this.colParent = data['column'].constraint.colParent;\n    }\n\n\n  }\n  colTypes = TypeScriptTypesArray;\n  name = '';\n  type = '';\n  nullable = false;\n  isPk = false;\n  tblParent = '';\n  colParent = '';\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName,this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  constraintParentTableChange(tblName: string) {\n    console.log(tblName);\n    this.getTableStructure(tblName);\n  }\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint = {\n          name: '',\n          tblParent: this.tblParent,\n          colParent: this.colParent\n        };\n      }\n\n      this.dataService.addColumn(col);\n    }\n  }\n\n  submitColumn() {\n\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLXdpZHRoOiA0NTBweDtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLXRvcDogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-delete.dialog',\n  templateUrl: '../../dialogs/delete/delete.dialog.html',\n  styleUrls: ['../../dialogs/delete/delete.dialog.css']\n})\nexport class DeleteDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteColumn(this.data.id);\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-display-table.dialog',\n  templateUrl: '../../dialogs/displayTable/displayTable.dialog.html',\n  styleUrls: ['../../dialogs/displayTable/displayTable.dialog.css']\n})\nexport class DisplayTableDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<DisplayTableDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteColumn(this.data.id);\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\ntable {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  border: 1px solid #dddddd;\\n  text-align: left;\\n  padding: 8px;\\n}\\n\\ntr:nth-child(even) {\\n  background-color: #dddddd;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kaXNwbGF5VGFibGUvZGlzcGxheVRhYmxlLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtFQUN6QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3MvZGlzcGxheVRhYmxlL2Rpc3BsYXlUYWJsZS5kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRhYmxlIHtcbiAgZm9udC1mYW1pbHk6IGFyaWFsLCBzYW5zLXNlcmlmO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB3aWR0aDogMTAwJTtcbn1cblxudGQsIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZGRkZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG50cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkO1xufSJdfQ== */\"","import { TypeScriptTypesArray } from './../../../entities/tableGeneratorStructure';\nimport { GetterService } from './../../services/getter.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as types from 'src/entities/tableGeneratorStructure';\n\n@Component({\n  selector: 'app-baza.dialog',\n  templateUrl: '../../dialogs/edit/edit.dialog.html',\n  styleUrls: ['../../dialogs/edit/edit.dialog.css']\n})\nexport class EditDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<EditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService, public gtService: GetterService) {\n    this.getParentTablesName('');\n    this.name = data['column'].name;\n    this.type = data['column'].type;\n    this.isPk = data['column'].isPk;\n    this.nullable = data['column'].nullable;\n    if (data['column'].constraint) {\n      this.fkName =  data['column'].constraint.name,\n      this.tblParent = data['column'].constraint.tblParent,\n        this.colParent = data['column'].constraint.colParent;\n    }\n  }\n  colTypes = TypeScriptTypesArray;\n\n  name = '';\n  type = '';\n  nullable = false;\n  isPk = false;\n  tblParent = '';\n  colParent = '';\n  fkName = '';\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName,this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  constraintParentTableChange(tblName: string) {\n    this.getTableStructure(tblName);\n  }\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      this.type = this.type;\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint = {\n          name: this.fkName,\n          tblParent: this.tblParent,\n          colParent: this.colParent\n        };\n      }\n\n\n      this.dataService.updateColumn(col);\n    }\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9lZGl0L2VkaXQuZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2dzL2VkaXQvZWRpdC5kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi13aWR0aDogNDUwcHg7XG59XG5cbi5jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZy10b3A6IDZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmbGV4LWdyb3c6IDE7XG59XG4iXX0= */\"","import { Pipe, PipeTransform } from '@angular/core';\nimport { TypeScriptTypesArray } from 'src/entities/tableGeneratorStructure';\n\n@Pipe({\n  name: 'fromNumberTypeToErdStructure'\n})\nexport class FromNumberTypeToErdStructurePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    const num = parseInt(value, 10);\n    return TypeScriptTypesArray[num];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'fromTableNameToTitle'\n})\nexport class FromTableNameToTitlePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    const titleWords = value.split('_');\n    let title = '';\n    for (const word of titleWords) {\n      const newWord = word.charAt(0).toUpperCase() + word.slice(1);\n      title += newWord + ' ';\n    }\n    return title;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dpdC10b2tlbi9naXQtdG9rZW4uY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Optional, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-git-token',\n  templateUrl: './git-token.component.html',\n  styleUrls: ['./git-token.component.less']\n})\nexport class GitTokenComponent implements OnInit {\n  gitToken = new FormControl(localStorage.getItem('githubToken'), [Validators.required]);\n  constructor(public dialogRef: MatDialogRef<GitTokenComponent>, @Optional() @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  onDbSubmit() {\n    localStorage.setItem('githubToken', this.gitToken.value);\n    this.dialogRef.close(this.gitToken.value);\n  }\n\n}\n","export default \".db-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n.db-full-width {\\n  width: 100%;\\n}\\n:host ::ng-deep.mat-form-field-infix {\\n  width: 500px;\\n}\\n:host ::ng-deep.mat-header-cell {\\n  padding-left: 20px;\\n}\\n:host ::ng-deep.mat-cell {\\n  padding-left: 20px;\\n}\\n.hr-doc-section {\\n  background-color: #f3f1f1;\\n  width: 50%;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9oci1kb2N1bWVudC1nZW5lcmF0b3IvaHItZG9jdW1lbnQtZ2VuZXJhdG9yLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9oci1kb2N1bWVudC1nZW5lcmF0b3IvaHItZG9jdW1lbnQtZ2VuZXJhdG9yLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUNDRjtBREVBO0VBQ0UsV0FBQTtBQ0FGO0FER0E7RUFDRSxZQUFBO0FDREY7QURHQTtFQUNFLGtCQUFBO0FDREY7QURJQTtFQUNFLGtCQUFBO0FDRkY7QURLQTtFQUNFLHlCQUFBO0VBQ0UsVUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0hKIiwiZmlsZSI6InNyYy9hcHAvaHItZG9jdW1lbnQtZ2VuZXJhdG9yL2hyLWRvY3VtZW50LWdlbmVyYXRvci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYi1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5kYi1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbjpob3N0IDo6bmctZGVlcC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gIHdpZHRoOiA1MDBweDtcbn1cbjpob3N0IDo6bmctZGVlcC5tYXQtaGVhZGVyLWNlbGx7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwLm1hdC1jZWxse1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG59XG5cbi5oci1kb2Mtc2VjdGlvbntcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjFmMTtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuIiwiLmRiLWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5kYi1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICB3aWR0aDogNTAwcHg7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LWhlYWRlci1jZWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuOmhvc3QgOjpuZy1kZWVwLm1hdC1jZWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuLmhyLWRvYy1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjFmMTtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild, NgModule } from '@angular/core';\nimport { HRDocumentType, PGConnectionOption, HRSubsectionTemplate, HRSubsection } from '../Entities/hr';\nimport { HrService } from '../services/hr.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { DbConnectComponent } from '../db-connect/db-connect.component';\nimport { CommonModule } from '@angular/common';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-hr-document-generator',\n  templateUrl: './hr-document-generator.component.html',\n  styleUrls: ['./hr-document-generator.component.less']\n})\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [HrDocumentGeneratorComponent]\n\n})\nexport class HrDocumentGeneratorComponent implements OnInit {\n  pgConnOpt: PGConnectionOption;\n\n  hrDocTypsArr: HRDocumentType[];\n  hrDocTypeSelected: HRDocumentType;\n\n  hrSubSectionTemplateArr: HRSubsectionTemplate[];\n  hrSubSectionTemplateSelected: HRSubsectionTemplate;\n\n  hrSubsectionArr: HRSubsection[];\n  hrSubsectionDataSource = new MatTableDataSource(this.hrSubsectionArr);\n  hrSubsectionSelected: HRSubsection;\n  hrSubsectionColumns: string[] = [];\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  filterCols = ['template_id', 'created_at', 'is_name_editable', 'is_question_editable', 'settings', 'order_num', 'section', 'type'];\n  constructor(private hrService: HrService, public dialog: MatDialog, public dataService: DataService) { }\n\n  ngOnInit() {\n    this.pgConnOpt = this.dataService.pgConnect;\n    this.onDbSubmit();\n  }\n\n\n\nonDbSubmit() {\n\n  this.hrService.getHrDocumentType(this.pgConnOpt).subscribe(data => {\n    this.hrDocTypsArr = data;\n  });\n}\n\ndocTypeChange(hrDocTypeSelected: HRDocumentType) {\n  console.log(hrDocTypeSelected);\n  this.hrService.getHrSubsectionTemplateByDocumentTypeId(this.pgConnOpt, hrDocTypeSelected.id).subscribe(data => {\n    this.hrSubSectionTemplateArr = data;\n  });\n}\n\nsubsectionTamplateChange(hrSubsectionTemplate: HRSubsectionTemplate) {\n  console.log(hrSubsectionTemplate);\n  this.hrService.getHrSubsectionByHrSubsectionTemplateId(this.pgConnOpt, hrSubsectionTemplate.id).subscribe(data => {\n    this.hrSubsectionArr = data;\n    this.hrSubsectionDataSource = new MatTableDataSource(this.hrSubsectionArr);\n\n    this.hrSubsectionColumns = Object.keys(this.hrSubsectionArr[0]).reduce((accumulator, currentValue) => {\n      if (this.filterCols.filter(x => x === currentValue).length) {\n        return accumulator;\n      } else {\n        accumulator.push(currentValue);\n        return accumulator;\n      }\n    }, []);\n    this.hrSubsectionColumns.push('viewQuestions');\n    this.hrSubsectionDataSource.sort = this.sort;\n  });\n}\n\nsubsectionChange(hrSubsection: HRSubsection) {\n  console.log(hrSubsection);\n}\n\nsubsectionFilter(event: Event) {\n  const filterValue = (event.target as HTMLInputElement).value;\n  this.hrSubsectionDataSource.filter = filterValue.trim().toLowerCase();\n}\n\n}\n","export default \"tr td {\\n  padding-right: 10px !important;\\n}\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n.tabel-view-body {\\n  background-color: #f3f1f1;\\n  width: 50%;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9saXN0LXRhYmxlcy9saXN0LXRhYmxlcy5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvbGlzdC10YWJsZXMvbGlzdC10YWJsZXMuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSw4QkFBQTtBQ0FSO0FESUU7RUFDRSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNGSjtBRElFO0VBQ0UseUJBQUE7RUFDQSxVQUFBO0VBRUEsY0FBQTtFQUNBLGtCQUFBO0FDSEoiLCJmaWxlIjoic3JjL2FwcC9saXN0LXRhYmxlcy9saXN0LXRhYmxlcy5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbInRye1xuICAgIHRke1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG4gIFxuICAuZXhhbXBsZS1zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNjBweDtcbiAgfVxuICAudGFiZWwtdmlldy1ib2R5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YxZjE7XG4gICAgd2lkdGg6IDUwJTtcbiAgXG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBcbiAgfVxuICAiLCJ0ciB0ZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cbi5leGFtcGxlLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogNjBweDtcbn1cbi50YWJlbC12aWV3LWJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmMWYxO1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { GetterService } from '../services/getter.service';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { DataService } from '../services/data.service';\nimport { element } from 'protractor';\n\nexport interface ColumnElement {\n  name: string;\n  type: string;\n  nullable: boolean;\n  isPk: boolean;\n  relatedToTable: string;\n  atColumn: string;\n  fkName: string;\n}\n\nconst ELEMENT_DATA: ColumnElement[] = [];\n\n@Component({\n  selector: 'app-list-tables',\n  templateUrl: './list-tables.component.html',\n  styleUrls: ['./list-tables.component.less']\n})\nexport class ListTablesComponent implements OnInit {\n  tablesList = [];\n  displayedColumns: string[] = ['name', 'type', 'nullable', 'isPk', 'relatedToTable', 'atColumn', 'fkName'];\n  colSource = new MatTableDataSource<ColumnElement>(ELEMENT_DATA);\n  openeds = {};\n  loaded = {};\n\n  constructor(private gtService: GetterService, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getTablesName('');\n  }\n  getTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      data.tablesName.filter(tblName => tblName.includes(filterKeyword)).forEach(element => {\n        const tbl = {\n          name: element,\n          colSource: new MatTableDataSource<ColumnElement>(ELEMENT_DATA),\n          openeds: false\n        };\n        this.tablesList.push(tbl);\n      });\n    });\n  }\n\n  getTableStructure(tblName: string, index: number): void {\n    this.loaded[index] = true;\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(data => {\n      this.tablesList.forEach(tbl => {\n        if (tbl.name === tblName) {\n          tbl.colSource = data.tableCol;\n          console.log(tbl.colSource.length);\n        }\n      });\n    });\n  }\n\n  applyFilter(evt) {\n    this.getTablesName(evt);\n  }\n}\n","export default \"td,\\nth {\\n  padding: 20px !important;\\n  text-align: center !important;\\n}\\n.create-table-container {\\n  display: flex;\\n  flex-direction: row;\\n  width: 30%;\\n}\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n.example-container > * {\\n  width: 30%;\\n}\\n.example-container form {\\n  margin-bottom: 20px;\\n}\\n.example-container form > * {\\n  margin: 5px 0;\\n}\\n.example-container .mat-radio-button {\\n  margin: 0 12px;\\n}\\n.table-container {\\n  width: 100%;\\n  margin: 0 auto;\\n  padding-left: 25%;\\n}\\n:host ::ng-deep.mat-paginator-container {\\n  justify-content: center !important;\\n}\\n.paginator-container {\\n  width: 100% !important;\\n  margin: 0 auto !important;\\n}\\n.add-table-container {\\n  width: 80%;\\n  margin: 0 auto;\\n}\\n.generate-table-btn {\\n  margin-top: 37px;\\n  width: 14%;\\n  /* margin: 0 auto; */\\n  font-size: 24px;\\n  background-color: #d01b58;\\n  color: white;\\n  margin-left: 43%;\\n}\\n.progress-spinner-btn {\\n  margin-top: 37px;\\n  width: 14%;\\n  /* margin: 0 auto; */\\n  font-size: 24px;\\n  color: white;\\n  margin-left: 43%;\\n}\\n.generaters-buttons-container {\\n  display: flex;\\n  flex-direction: row;\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9uZXctdGFibGUvbmV3LXRhYmxlLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9uZXctdGFibGUvbmV3LXRhYmxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUNFLHdCQUFBO0VBQ0EsNkJBQUE7QUNFRjtBREFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtBQ0VGO0FEQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtBQ0VGO0FEQ0E7RUFDRSxVQUFBO0FDQ0Y7QURFQTtFQUNFLG1CQUFBO0FDQUY7QURHQTtFQUNFLGFBQUE7QUNERjtBRElBO0VBQ0UsY0FBQTtBQ0ZGO0FESUE7RUFDRSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDRkY7QURLQTtFQUNFLGtDQUFBO0FDSEY7QURLQTtFQUNFLHNCQUFBO0VBQ0EseUJBQUE7QUNIRjtBRE1BO0VBQ0UsVUFBQTtFQUNBLGNBQUE7QUNKRjtBRE1BO0VBQ0UsZ0JBQUE7RUFDQSxVQUFBO0VDSkEsb0JBQW9CO0VETXBCLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0pGO0FET0E7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUNMQSxvQkFBb0I7RURPcEIsZUFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0xGO0FET0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtBQ0xGIiwiZmlsZSI6InNyYy9hcHAvbmV3LXRhYmxlL25ldy10YWJsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLCB0aHtcbiAgcGFkZGluZzogMjBweCAhaW1wb3J0YW50O1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cbi5jcmVhdGUtdGFibGUtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgd2lkdGg6IDMwJTtcbn1cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDMwJTtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgZm9ybSA+ICoge1xuICBtYXJnaW46IDVweCAwO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgLm1hdC1yYWRpby1idXR0b24ge1xuICBtYXJnaW46IDAgMTJweDtcbn1cbi50YWJsZS1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMjUlO1xufVxuXG46aG9zdCA6Om5nLWRlZXAubWF0LXBhZ2luYXRvci1jb250YWluZXJ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4ucGFnaW5hdG9yLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7XG5cbn1cbi5hZGQtdGFibGUtY29udGFpbmVyIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uZ2VuZXJhdGUtdGFibGUtYnRuIHtcbiAgbWFyZ2luLXRvcDogMzdweDtcbiAgd2lkdGg6IDE0JTtcbiAgLyogbWFyZ2luOiAwIGF1dG87ICovXG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QwMWI1ODtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW4tbGVmdDogNDMlO1xufVxuXG4ucHJvZ3Jlc3Mtc3Bpbm5lci1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4uZ2VuZXJhdGVycy1idXR0b25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuIiwidGQsXG50aCB7XG4gIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4uY3JlYXRlLXRhYmxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiAzMCU7XG59XG4uZXhhbXBsZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMzAlO1xufVxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0gPiAqIHtcbiAgbWFyZ2luOiA1cHggMDtcbn1cbi5leGFtcGxlLWNvbnRhaW5lciAubWF0LXJhZGlvLWJ1dHRvbiB7XG4gIG1hcmdpbjogMCAxMnB4O1xufVxuLnRhYmxlLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAyNSU7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LXBhZ2luYXRvci1jb250YWluZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xufVxuLnBhZ2luYXRvci1jb250YWluZXIge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xufVxuLmFkZC10YWJsZS1jb250YWluZXIge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5nZW5lcmF0ZS10YWJsZS1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDAxYjU4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4ucHJvZ3Jlc3Mtc3Bpbm5lci1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4uZ2VuZXJhdGVycy1idXR0b25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuIl19 */\"","import { Constraint } from './../../entities/tableGeneratorStructure';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { Column, ErdStructure, TypeScriptTypesArray } from 'src/entities/tableGeneratorStructure';\nimport { GeneratorService } from '../services/generator.service';\nimport { ColumnElement } from '../list-tables/list-tables.component';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { AddDialogComponent } from '../dialogs/add/add.dialog.component';\nimport { EditDialogComponent } from '../dialogs/edit/edit.dialog.component';\nimport { DeleteDialogComponent } from '../dialogs/delete/delete.dialog.component';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GitTokenComponent } from '../git-token/git-token.component';\n\nexport interface ColumnElement {\n  id: number;\n  name: string;\n  type: string;\n  nullable: boolean;\n  isPk: boolean;\n  fkName: string;\n  relatedToTable: string;\n  atColumn: string;\n}\n\n\n@Component({\n  selector: 'app-new-table',\n  templateUrl: './new-table.component.html',\n  styleUrls: ['./new-table.component.less']\n})\n\nexport class NewTableComponent implements OnInit {\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private generatorService: GeneratorService, public httpClient: HttpClient, public dialog: MatDialog, public dataService: DataService) {\n  }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  githubToken: string;\n  tableName = new FormControl('', [Validators.required]);\n  columns: any[] = [];\n  newColClicked = false;\n  generatColUpdatedAt = false;\n  generatColUpdatedBy = false;\n  generatColCreatedAt = false;\n  generatColCreatedBy = false;\n  generatColPrimaryKey = false;\n  exampleDatabase: DataService | null;\n  dataSource: ExampleDataSource | null;\n\n\n  index: number;\n  id: number;\n  name: string;\n  displayedColumns: string[] = ['name', 'type', 'nullable', 'isPk', 'relatedToTable', 'atColumn', 'fkName', 'actions'];\n  pendingRequest = false;\n  ngOnInit(): void {\n    if (localStorage.getItem('githubToken') === null) {\n      const dialogRef = this.dialog.open(GitTokenComponent, {\n        data: { githubToken: '' }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        this.fillPgConectOptionFromLocalStorage();\n        this.loadData();\n      });\n    } else {\n      this.fillPgConectOptionFromLocalStorage();\n      this.loadData();\n    }\n\n    this.loadData();\n  }\n  fillPgConectOptionFromLocalStorage() {\n    this.githubToken = localStorage.getItem('githubToken');\n  }\n  refresh() {\n    this.loadData();\n  }\n\n  generateTemplate(erdStrct: ErdStructure): void {\n    this.pendingRequest = true;\n    this.generatorService.generateTemplate(erdStrct).subscribe(data => {\n      const blob = new Blob([data], { type: 'application/zip' });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url);\n      this.pendingRequest = false;\n    });\n  }\n\n  getErrorMessage(fieldName: string) {\n    // tslint:disable-next-line: max-line-length\n    return this[fieldName].hasError('required') ? 'You must enter a ' + fieldName : this[fieldName].hasError(fieldName) ? 'Not a valid ' + fieldName : '';\n  }\n\n  onTableNameChange(searchValue: string): void {\n  }\n\n\n  constraintValid(col: Column): boolean {\n    let valid = false;\n    if (col.constraint && col.constraint.tblParent && col.constraint.colParent) {\n      valid = true;\n    }\n    return valid;\n  }\n\n\n  generateCol(colGnrtd): void {\n    const generatedColElement: ColumnElement = {\n      name: '',\n      type: '4',\n      nullable: false,\n      isPk: false,\n      fkName: undefined,\n      relatedToTable: undefined,\n      atColumn: undefined\n    };\n\n    const colGenerated: Column = {\n      name: '',\n      type: '',\n      nullable: false,\n      isPk: false,\n      constraint: undefined\n    };\n\n\n    if (colGnrtd === 'createdAt') {\n      this.generatColCreatedAt = true;\n      generatedColElement.name = 'created_at';\n      generatedColElement.type = 'INSTANT';\n    } else if (colGnrtd === 'createdBy') {\n      this.generatColCreatedBy = true;\n      generatedColElement.name = 'created_by';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.fkName = this.tableName.value + '_to_agency_member_fk';\n      generatedColElement.relatedToTable = 'agency_member';\n      generatedColElement.atColumn = 'id';\n      colGenerated.constraint = {\n        name: generatedColElement.fkName,\n        tblParent: generatedColElement.relatedToTable,\n        colParent: generatedColElement.atColumn\n      };\n    } else if (colGnrtd === 'updatedAt') {\n      this.generatColUpdatedAt = true;\n      generatedColElement.name = 'updated_at';\n      generatedColElement.type = 'INSTANT';\n    } else if (colGnrtd === 'updatedBy') {\n      this.generatColUpdatedBy = true;\n      generatedColElement.name = 'updated_by';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.fkName = this.tableName.value + '_to_agency_member_fk';\n      generatedColElement.relatedToTable = 'agency_member';\n      generatedColElement.atColumn = 'id';\n      colGenerated.constraint = {\n        name: generatedColElement.fkName,\n        tblParent: generatedColElement.relatedToTable,\n        colParent: generatedColElement.atColumn\n      };\n    } else if (colGnrtd === 'primaryKey') {\n      this.generatColPrimaryKey = true;\n      generatedColElement.name = 'id';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.isPk = true;\n    }\n    colGenerated.name = generatedColElement.name;\n    colGenerated.type = generatedColElement.type;\n    colGenerated.nullable = generatedColElement.nullable;\n    colGenerated.isPk = generatedColElement.isPk;\n\n\n    this.exampleDatabase.dataChange.value.push(colGenerated);\n    this.refreshTable();\n\n\n  }\n\n  generateTable() {\n    const newTableErdStructure = new ErdStructure();\n    newTableErdStructure.tblName = this.tableName.value;\n    newTableErdStructure.githubToken = this.githubToken;\n    newTableErdStructure.columns = [];\n\n    for (const row of this.exampleDatabase.dataChange.value) {\n\n      const col: Column = {\n        name: row.name,\n        type: row.type,\n        isPk: row.isPk,\n        nullable: row.nullable,\n        constraint: undefined\n      };\n      col.constraint = row.constraint;\n\n      newTableErdStructure.columns.push(col);\n    }\n    this.generateTemplate(newTableErdStructure);\n  }\n\n\n\n\n\n  stringToEnum<ET, T>(enumObj: ET, str: keyof ET): T {\n    return enumObj[str as string];\n  }\n\n  addNew(column: Column) {\n    if (column === undefined) {\n      column = {\n        name: '',\n        type: '',\n        isPk: false,\n        nullable: false,\n        constraint: {\n          name: '',\n          tblParent: '',\n          colParent: ''\n        },\n      };\n    }\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      data: { column }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result === 1) {\n        column = this.dataService.getDialogData();\n        if (this.constraintValid(column)) {\n          column.constraint.name = this.tableName.value + '_' +\n          column.name + '_to_' +\n          column.constraint.tblParent + '_' +\n          column.constraint.colParent + '_fk';\n        }\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.push(column);\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  startEdit(i: number, name: string, type: string, nullable: boolean, isPk: boolean) {\n    // index row is used just for debugging proposes and can be removed\n    this.index = i;\n    const column: Column = {\n      name,\n      type,\n      isPk,\n      nullable,\n      constraint: {\n        name: '',\n        tblParent: '',\n        colParent: ''\n      },\n    };\n    if (this.constraintValid(this.exampleDatabase.dataChange.value[this.index])) {\n      column.constraint = {\n        name: this.exampleDatabase.dataChange.value[this.index].constraint.name,\n        tblParent: this.exampleDatabase.dataChange.value[this.index].constraint.tblParent,\n        colParent: this.exampleDatabase.dataChange.value[this.index].constraint.colParent\n      };\n    }\n\n    console.log(this.index);\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      data: { column }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const columnInserted = this.dataService.getDialogData();\n        if (this.constraintValid(columnInserted)) {\n          columnInserted.constraint.name = this.tableName.value + '_' +\n            columnInserted.name + '_to_' +\n            columnInserted.constraint.tblParent + '_' +\n            columnInserted.constraint.colParent + '_fk';\n        }\n\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.name === this.name);\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[this.index] = columnInserted;\n        // And lastly refresh table\n        this.refreshTable();\n      }\n    });\n  }\n\n  deleteItem(i: number,\n             name: string,\n             type: string,\n             nullable: boolean,\n             isPk: boolean,\n             relatedToTable: string,\n             atColumn: string,\n             fkName: string) {\n    this.index = i;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { name, type, nullable, isPk, relatedToTable, atColumn, fkName }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.name === this.name);\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  public loadData() {\n    this.exampleDatabase = new DataService(this.httpClient);\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n  }\n\n}\n\n\nexport class ExampleDataSource extends DataSource<Column> {\n  filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this.filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n\n  filteredData: Column[] = [];\n  renderedData: Column[] = [];\n\n  constructor(public exampleDatabase: DataService, public paginator: MatPaginator, public sort: MatSort) {\n    super();\n\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Column[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this.paginator.page,\n      this.filterChange,\n\n\n    ];\n\n    this.exampleDatabase.getAllColumns();\n\n\n    return merge(...displayDataChanges).pipe(map(() => {\n      // Filter data\n      this.filteredData = this.exampleDatabase.data.slice().filter((column: Column) => {\n        const searchStr = (column.name + column.type + column.isPk + column.nullable).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n      });\n\n      // Sort filtered data\n      const sortedData = this.sortData(this.filteredData.slice());\n\n      // Grab the page's slice of the filtered sorted data.\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n      return this.renderedData;\n\n\n      return this.renderedData;\n    }\n    ));\n  }\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Column[]): Column[] {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n\n      switch (this.sort.active) {\n        case 'name': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'type': [propertyA, propertyB] = [a.type, b.type]; break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this.sort.direction === 'asc' ? 1 : -1);\n    });\n  }\n\n  disconnect() { }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9jaGlsZC10by1wYXJlbnRzL2NoaWxkLXRvLXBhcmVudHMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { GetterService } from '../../services/getter.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { DeleteDialogComponent } from 'src/app/dialogs/delete/delete.dialog.component';\nimport { DisplayTableDialogComponent } from 'src/app/dialogs/displayTable/displayTable.dialog.component';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-child-to-parents',\n  templateUrl: './child-to-parents.component.html',\n  styleUrls: ['./child-to-parents.component.less']\n})\nexport class ChildToParentsComponent implements OnInit {\n\n  dataSource: DynamicDataSource;\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n  relationsDictionary = {};\n\n  constructor(private gtService: GetterService, private database: ChildToParentsDynamicDatabase,\n              public dialog: MatDialog, private dataService: DataService) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.dataSource.data = this.database.initialData(rltDic.childToParentsDictionary);\n    });\n  }\n\n  ngOnInit() {\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.relationsDictionary = rltDic;\n    });\n  }\n\n  tableClicked(tblName): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(columns => {\n      this.displayTable(tblName, columns.tableCol);\n    });\n  }\n\n  displayTable(tblName: string, columns: any[]) {\n   this.dialog.open(DisplayTableDialogComponent, {data: {tblName, columns}});\n  }\n\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n}\n\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level = 1, public expandable = false,\n              public isLoading = false) { }\n}\n\n/**\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the database.\n */\nexport class ChildToParentsDynamicDatabase {\n  dataMap = new Map<string, string[]>();\n\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\n\n  /** Initial data from database */\n  initialData(relationsTableDictionary): DynamicFlatNode[] {\n    for (const prntTbl of Object.keys(relationsTableDictionary)) {\n      this.dataMap.set(prntTbl, relationsTableDictionary[prntTbl]);\n    }\n\n    this.rootLevelNodes = Object.keys(relationsTableDictionary);\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this._treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private _treeControl: FlatTreeControl<DynamicFlatNode>,\n              private _database: ChildToParentsDynamicDatabase) { }\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this._treeControl.expansionModel.onChange.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n        (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this._database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this._database.isExpandable(name)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n          && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, 1000);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9wYXJlbnQtdG8tY2hpbGRzL3BhcmVudC10by1jaGlsZHMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { GetterService } from '../../services/getter.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { map } from 'rxjs/operators';\nimport { DisplayTableDialogComponent } from 'src/app/dialogs/displayTable/displayTable.dialog.component';\nimport { MatDialog } from '@angular/material';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-parent-to-childs',\n  templateUrl: './parent-to-childs.component.html',\n  styleUrls: ['./parent-to-childs.component.less']\n})\nexport class ParentToChildsComponent implements OnInit {\n\n  constructor(private gtService: GetterService, private database: ParentToChildsDynamicDatabase,\n              public dialog: MatDialog, private dataService: DataService) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.dataSource.data = this.database.initialData(rltDic.parentToChildsDictionary);\n    });\n  }\n\n\n  relationsDictionary = {};\n\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n\n  dataSource: DynamicDataSource;\n\n  ngOnInit() {\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.relationsDictionary = rltDic;\n    });\n  }\n\n  tableClicked(tblName): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(columns => {\n      this.displayTable(tblName, columns.tableCol);\n    });\n  }\n\n  displayTable(tblName: string, columns: any[]) {\n    this.dialog.open(DisplayTableDialogComponent, { data: { tblName, columns } });\n  }\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n}\n\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level = 1, public expandable = false,\n              public isLoading = false) { }\n}\n\n/**\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the database.\n */\nexport class ParentToChildsDynamicDatabase {\n  dataMap = new Map<string, string[]>();\n\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\n\n  /** Initial data from database */\n  initialData(relationsTableDictionary): DynamicFlatNode[] {\n    for (const prntTbl of Object.keys(relationsTableDictionary)) {\n      this.dataMap.set(prntTbl, relationsTableDictionary[prntTbl]);\n    }\n\n    this.rootLevelNodes = Object.keys(relationsTableDictionary);\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n              private database: ParentToChildsDynamicDatabase) { }\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.onChange.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n        (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this.database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n          && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, 1000);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9yZWxhdGlvbnMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relations',\n  templateUrl: './relations.component.html',\n  styleUrls: ['./relations.component.less']\n})\nexport class RelationsComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeActionCol'\n})\nexport class RemoveActionColPipe implements PipeTransform {\n\n  transform(items: string[], ...args: any[]): any {\n    items = items.reduce((acc, curr) => {\n      if (curr !== 'viewQuestions') {\n        acc.push(curr);\n      } else {}\n      return acc;\n    }, []);\n    return items;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Column } from 'src/entities/tableGeneratorStructure';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Injectable()\nexport class DataService {\n  private readonly API_URL = 'https://api.github.com/repos/angular/angular/issues';\n\n  pgConnect: PGConnectionOption;\n  dataChange: BehaviorSubject<Column[]> = new BehaviorSubject<Column[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get data(): Column[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllColumns(): void {\n    this.dataChange;\n\n\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addColumn(col: Column): void {\n    this.dialogData = col;\n  }\n\n  updateColumn(col: Column): void {\n    this.dialogData = col;\n  }\n\n  deleteColumn(id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneratorService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  postGenerateTamplateUrl = this.headUrl + 'create_template';\n\n  constructor(private http: HttpClient) {}\n\n  generateTemplate(tblParams: any): Observable<any>  {\n    return this.http.post(this.postGenerateTamplateUrl, tblParams, {\n      responseType: 'arraybuffer'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetterService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  getTablesUrl = this.headUrl + 'get_tables';\n  getTableStructureUrl = this.headUrl + 'get_table_structure';\n  getRelationsUrl = this.headUrl + 'get_relations';\n  constructor(private http: HttpClient) { }\n  /* development porpose\n    mokeTblList: Observable<string[]> = new Observable<string[]>();\n     mokeColList: Observable<string[]> = new Observable<string[]>();\n     */\n  getTablesName(pgConn: PGConnectionOption): Observable<any> {\n    /* development porpose\n      const simpleObservable = new Observable((observer) => {\n      observer.next({tablesName : ['tbl1','tbl2','tbl3']});\n        observer.complete();\n      });\n      return simpleObservable;*/\n    return this.http.get(this.getTablesUrl + `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n\n  }\n\n  getTableStructure(tblName: string, pgConn: PGConnectionOption): Observable<any> {\n    /* development porpose\n     const simpleObservable = new Observable((observer) => {\n       observer.next({tableCol : [{name: 'id'}, {name: 'a'}, {name: 'b'}]});\n        observer.complete();\n     });\n\n     return simpleObservable;*/\n    return this.http.get(this.getTableStructureUrl + `?tblName=${tblName}&username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n  getRealtions(pgConn: PGConnectionOption): Observable<any> {\n    return this.http.get(this.getRelationsUrl +\n      `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HRDocumentType, PGConnectionOption, HRSubsectionTemplate, HRSubsection } from '../Entities/hr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HrService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  getHrDocsTypeUrl = this.headUrl + 'hr_doc_type';\n  getHrSubsectionTemplateByDocumentTypeIdUrl = this.headUrl + 'hr_subsection_template_by_doc_type_id';\n  getHrSubsectionByHrSubsectionTemplateIdUrl = this.headUrl + 'hr_subsection_by_subsection_template_id';\n\n  constructor(private http: HttpClient) { }\n\n  getHrDocumentType(pgConn: PGConnectionOption): Observable<HRDocumentType[]> {\n    return this.http.get<HRDocumentType[]>(this.getHrDocsTypeUrl +\n      `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n  getHrSubsectionTemplateByDocumentTypeId(pgConn: PGConnectionOption, hrDocumentTypeId: number): Observable<HRSubsectionTemplate[]> {\n    return this.http.get<HRSubsectionTemplate[]>(this.getHrSubsectionTemplateByDocumentTypeIdUrl +\n      `?docTypeId=${hrDocumentTypeId}&username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n  getHrSubsectionByHrSubsectionTemplateId(pgConn: PGConnectionOption, hrSubsectionTemplateId: number): Observable<HRSubsection[]> {\n    return this.http.get<HRSubsection[]>(this.getHrSubsectionByHrSubsectionTemplateIdUrl +\n      `?subsectionTemplateId=${hrSubsectionTemplateId}\n      &username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tableValue'\n})\nexport class TableValuePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if (value instanceof Date) {\n      console.log(`its a date`);\n    }\n    return value;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlcy12aWV3L3RhYmxlcy12aWV3LmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tables-view',\n  templateUrl: './tables-view.component.html',\n  styleUrls: ['./tables-view.component.less']\n})\nexport class TablesViewComponent implements OnInit {\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n}\n","export class ErdStructure {\n  githubToken: string = undefined;\n  tblName: string = undefined;\n  columns: Column[];\n}\n\nexport class Column {\n  name: string;\n  type: string;\n  isPk: boolean;\n  nullable: boolean;\n  constraint: Constraint;\n}\n\nexport class Constraint {\n  name: string;\n  tblParent: string;\n  colParent: string;\n}\n\nexport let TypeScriptTypesArray = ['INTEGER', 'TEXT', 'BOOLEAN', 'LOCALDATE', 'INSTANT', 'JSONB'];\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}