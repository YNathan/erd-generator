{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/column/column.component.html","./src/app/db-connect/db-connect.component.html","./src/app/dialogs/add/add.dialog.html","./src/app/dialogs/delete/delete.dialog.html","./src/app/dialogs/displayTable/displayTable.dialog.html","./src/app/dialogs/edit/edit.dialog.html","./src/app/git-token/git-token.component.html","./src/app/hr-document-generator/hr-document-generator.component.html","./src/app/list-tables/list-tables.component.html","./src/app/new-table/new-table.component.html","./src/app/relations/child-to-parents/child-to-parents.component.html","./src/app/relations/parent-to-childs/parent-to-childs.component.html","./src/app/relations/relations.component.html","./src/app/tables-view/tables-view.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.less","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/column/column.component.less","./src/app/column/column.component.ts","./src/app/db-connect/db-connect.component.less","./src/app/db-connect/db-connect.component.ts","./src/app/dialogs/add/add.dialog.component.ts","./src/app/dialogs/add/add.dialog.css","./src/app/dialogs/delete/delete.dialog.component.ts","./src/app/dialogs/delete/delete.dialog.css","./src/app/dialogs/displayTable/displayTable.dialog.component.ts","./src/app/dialogs/displayTable/displayTable.dialog.css","./src/app/dialogs/edit/edit.dialog.component.ts","./src/app/dialogs/edit/edit.dialog.css","./src/app/from-number-type-to-erd-structure.pipe.ts","./src/app/from-table-name-to-title.pipe.ts","./src/app/git-token/git-token.component.less","./src/app/git-token/git-token.component.ts","./src/app/hr-document-generator/hr-document-generator.component.less","./src/app/hr-document-generator/hr-document-generator.component.ts","./src/app/list-tables/list-tables.component.less","./src/app/list-tables/list-tables.component.ts","./src/app/new-table/new-table.component.less","./src/app/new-table/new-table.component.ts","./src/app/relations/child-to-parents/child-to-parents.component.less","./src/app/relations/child-to-parents/child-to-parents.component.ts","./src/app/relations/parent-to-childs/parent-to-childs.component.less","./src/app/relations/parent-to-childs/parent-to-childs.component.ts","./src/app/relations/relations.component.less","./src/app/relations/relations.component.ts","./src/app/remove-action-col.pipe.ts","./src/app/services/data.service.ts","./src/app/services/generator.service.ts","./src/app/services/getter.service.ts","./src/app/services/hr.service.ts","./src/app/table-value.pipe.ts","./src/app/tables-view/tables-view.component.less","./src/app/tables-view/tables-view.component.ts","./src/entities/tableGeneratorStructure.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\\n\\n<style>\\n  :host {\\n    font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n    font-size: 14px;\\n    color: #333;\\n    box-sizing: border-box;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n\\n  h1,\\n  h2,\\n  h3,\\n  h4,\\n  h5,\\n  h6 {\\n    margin: 8px 0;\\n  }\\n\\n  p {\\n    margin: 0;\\n  }\\n\\n  .spacer {\\n    flex: 1;\\n  }\\n\\n  .toolbar {\\n    height: 60px;\\n    margin: -8px;\\n    display: flex;\\n    align-items: center;\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n  }\\n\\n  .toolbar img {\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar #twitter-logo {\\n    height: 40px;\\n    margin: 0 16px;\\n  }\\n\\n  .toolbar #twitter-logo:hover {\\n    opacity: 0.8;\\n  }\\n\\n  .content {\\n    display: flex;\\n    margin: 32px auto;\\n    padding: 0 16px;\\n    max-width: 960px;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  svg.material-icons {\\n    height: 24px;\\n    width: auto;\\n  }\\n\\n  svg.material-icons:not(:last-child) {\\n    margin-right: 8px;\\n  }\\n\\n  .card svg.material-icons path {\\n    fill: #888;\\n  }\\n\\n  .card-container {\\n    display: flex;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n    margin-top: 16px;\\n  }\\n\\n  .card {\\n    border-radius: 4px;\\n    border: 1px solid #eee;\\n    background-color: #fafafa;\\n    height: 40px;\\n    width: 200px;\\n    margin: 0 8px 16px;\\n    padding: 16px;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n    transition: all 0.2s ease-in-out;\\n    line-height: 24px;\\n  }\\n\\n  .card-container .card:not(:last-child) {\\n    margin-right: 0;\\n  }\\n\\n  .card.card-small {\\n    height: 16px;\\n    width: 168px;\\n  }\\n\\n  .card-container .card:not(.highlight-card) {\\n    cursor: pointer;\\n  }\\n\\n  .card-container .card:not(.highlight-card):hover {\\n    transform: translateY(-3px);\\n    box-shadow: 0 4px 17px rgba(black, 0.35);\\n  }\\n\\n  .card-container .card:not(.highlight-card):hover .material-icons path {\\n    fill: rgb(105, 103, 103);\\n  }\\n\\n  .card.highlight-card {\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;\\n    border: none;\\n    width: auto;\\n    min-width: 30%;\\n    position: relative;\\n  }\\n\\n  .card.card.highlight-card span {\\n    margin-left: 60px;\\n  }\\n\\n  svg#rocket {\\n    width: 80px;\\n    position: absolute;\\n    left: -10px;\\n    top: -24px;\\n  }\\n\\n  svg#rocket-smoke {\\n    height: 100vh;\\n    position: absolute;\\n    top: 10px;\\n    right: 180px;\\n    z-index: -10;\\n  }\\n\\n  a,\\n  a:visited,\\n  a:hover {\\n    color: #1976d2;\\n    text-decoration: none;\\n  }\\n\\n  a:hover {\\n    color: #125699;\\n  }\\n\\n  .terminal {\\n    position: relative;\\n    width: 80%;\\n    max-width: 600px;\\n    border-radius: 6px;\\n    padding-top: 45px;\\n    margin-top: 8px;\\n    overflow: hidden;\\n    background-color: rgb(15, 15, 16);\\n  }\\n\\n  .terminal::before {\\n    content: \\\"\\\\2022 \\\\2022 \\\\2022\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    height: 4px;\\n    background: rgb(58, 58, 58);\\n    color: #c2c3c4;\\n    width: 100%;\\n    font-size: 2rem;\\n    line-height: 0;\\n    padding: 14px 0;\\n    text-indent: 4px;\\n  }\\n\\n  .terminal pre {\\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n    color: white;\\n    padding: 0 1rem 1rem;\\n    margin: 0;\\n  }\\n\\n  .circle-link {\\n    height: 40px;\\n    width: 40px;\\n    border-radius: 40px;\\n    margin: 8px;\\n    background-color: white;\\n    border: 1px solid #eeeeee;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    cursor: pointer;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n    transition: 1s ease-out;\\n  }\\n\\n  .circle-link:hover {\\n    transform: translateY(-0.25rem);\\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  footer {\\n    margin-top: 8px;\\n    display: flex;\\n    align-items: center;\\n    line-height: 20px;\\n  }\\n\\n  footer a {\\n    display: flex;\\n    align-items: center;\\n  }\\n\\n  .github-star-badge {\\n    color: #24292e;\\n    display: flex;\\n    align-items: center;\\n    font-size: 12px;\\n    padding: 3px 10px;\\n    border: 1px solid rgba(27,31,35,.2);\\n    border-radius: 3px;\\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\\n    margin-left: 4px;\\n    font-weight: 600;\\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\\n  }\\n\\n  .github-star-badge:hover {\\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\\n    border-color: rgba(27,31,35,.35);\\n    background-position: -.5em;\\n  }\\n\\n  .github-star-badge .material-icons {\\n    height: 16px;\\n    width: 16px;\\n    margin-right: 4px;\\n  }\\n\\n  svg#clouds {\\n    position: fixed;\\n    bottom: -160px;\\n    left: -230px;\\n    z-index: -10;\\n    width: 1920px;\\n  }\\n\\n\\n  /* Responsive Styles */\\n  @media screen and (max-width: 767px) {\\n\\n    .card-container > *:not(.circle-link) ,\\n    .terminal {\\n      width: 100%;\\n    }\\n\\n    .card:not(.highlight-card) {\\n      height: 16px;\\n      margin: 8px 0;\\n    }\\n\\n    .card.highlight-card span {\\n      margin-left: 72px;\\n    }\\n\\n    svg#rocket-smoke {\\n      right: 120px;\\n      transform: rotate(-5deg);\\n    }\\n  }\\n\\n  @media screen and (max-width: 575px) {\\n    svg#rocket-smoke {\\n      display: none;\\n      visibility: hidden;\\n    }\\n  }\\n</style>\\n\\n<!-- Toolbar -->\\n<div class=\\\"toolbar\\\" role=\\\"banner\\\">\\n\\n  <img  routerLink=\\\"/**\\\" height=\\\"40\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/compLogo.svg\\\">\\n  <span>Welcome</span>\\n    <div class=\\\"spacer\\\"></div>\\n    <a href=\\\"https://github.com//_server2\\\" title=\\\"github\\\"><img  routerLink=\\\"/**\\\" height=\\\"20\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/GitHubIcon.png\\\" style=\\\"margin-top: 1px;\\\">\\n    </a>\\n   \\n  <a  routerLink=\\\"/new-table\\\" title=\\\"create a new table\\\">\\n    <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">library_add</mat-icon>\\n  </a>\\n  <a  routerLink=\\\"/hr-docs\\\" title=\\\"hr docs\\\">\\n    <img height=\\\"24\\\" alt=\\\"Angular Logo\\\" src=\\\"../assets/description.svg\\\">\\n  </a>\\n \\n</div>\\n\\n<div class=\\\"content\\\" role=\\\"main\\\">\\n</div>\\n\\n\\n<router-outlet></router-outlet>\\n\"","export default \"<div *ngIf=\\\"!submited\\\" class=\\\"column-container\\\">\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Enter column name\\\" [(ngModel)]=\\\"name\\\" [formControl]=\\\"colName\\\" required />\\n    <mat-error *ngIf=\\\"colName.invalid\\\">{{ getErrorMessage(\\\"colName\\\") }}</mat-error>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Type\\\"  [(ngModel)]=\\\"type\\\">\\n      <mat-option *ngFor=\\\"let item of colTypes\\\" value=\\\"{{item}}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-slide-toggle [(ngModel)]=\\\"nullable\\\">Nullable</mat-slide-toggle>\\n  <mat-slide-toggle [(ngModel)]=\\\"isPk\\\">Primary Key</mat-slide-toggle>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Parent Table\\\" [(ngModel)]=\\\"tblParent\\\" (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\">\\n      <mat-option *ngFor=\\\"let item of parentTablesList\\\" value=\\\"{{ item }}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Choose Parent Column\\\" [(ngModel)]=\\\"colParent\\\">\\n      <mat-option *ngFor=\\\"let item of parentTableColumnsNames\\\" value=\\\"{{ item }}\\\">{{ item }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <button mat-button (click)=\\\"submitColumn()\\\" color=\\\"primary\\\">add</button>\\n\\n</div>\\n\\n\\n\\n\"","export default \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Enter your db connection</h3>\\n    <form class=\\\"db-form\\\" (ngSubmit)=\\\"onDbSubmit()\\\">\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Host</mat-label>\\n            <input matInput [formControl]=\\\"dbHost\\\" placeholder=\\\"Enter the db host\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Name</mat-label>\\n            <input matInput [formControl]=\\\"dbName\\\" placeholder=\\\"Enter the db name\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db User</mat-label>\\n            <input matInput [formControl]=\\\"dbUser\\\" placeholder=\\\"Enter the db user\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <mat-form-field class=\\\"db-full-width\\\">\\n            <mat-label>Db Password</mat-label>\\n            <input matInput [formControl]=\\\"dbPassword\\\" placeholder=\\\"Enter the db password\\\">\\n        </mat-form-field>\\n        <div></div>\\n        <div mat-dialog-actions>\\n            <button mat-button> Save </button>\\n            <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n          </div>\\n    </form>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Add new Column</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"(submit)\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\"  name=\\\"name\\\" required></textarea>\\n        <!--mat-error-- *ngIf=\\\"formControl.invalid\\\">{{\\n          getErrorMessage()\\n        }}</!--mat-error-->\\n      </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Choose Type\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\">\\n        <mat-option *ngFor=\\\"let item of colTypes\\\" value=\\\"{{ item }}\\\" name=type>{{\\n          item\\n        }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-slide-toggle [(ngModel)]=\\\"nullable\\\" name=false>Nullable</mat-slide-toggle>\\n      <mat-slide-toggle [(ngModel)]=\\\"isPk\\\" name=false>Primary Key</mat-slide-toggle>\\n    </div>\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select\\n          placeholder=\\\"Choose Parent Table\\\"\\n          [(ngModel)]=\\\"tblParent\\\"\\n          (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\"\\n          name= \\\"table parent name\\\"\\n         [ngModelOptions]=\\\"{standalone: true}\\\">\\n          <mat-option\\n            *ngFor=\\\"let item of parentTablesList\\\"\\n            value=\\\"{{ item }}\\\"\\n            >{{ item }}</mat-option\\n          >\\n        </mat-select>\\n      </mat-form-field>\\n\\n\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"Choose Parent Column\\\" [(ngModel)]=\\\"colParent\\\" name= \\\"column parent name\\\"  [ngModelOptions]=\\\"{standalone: true}\\\">\\n          <mat-option\\n            *ngFor=\\\"let item of parentTableColumnsNames\\\"\\n            value=\\\"{{ item }}\\\"\\n            >{{ item }}</mat-option\\n          >\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div mat-dialog-actions>\\n      <button\\n        mat-button\\n        [type]=\\\"submit\\\"\\n        [disabled]=\\\"!formControl.valid\\\"\\n        [mat-dialog-close]=\\\"1\\\"\\n        (click)=\\\"confirmAdd()\\\"\\n      >\\n        Save\\n      </button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Are you sure?</h3>\\n  <div mat-dialog-content>\\n    Name: {{data.name}}\\n    <p></p>\\n    Type: {{data.type}}\\n    <p></p>\\n    Is Primary Key: {{data.isPk}}\\n    <p></p>\\n    Nullable : {{data.nullable}}\\n    <p></p>\\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button mat-button [mat-dialog-close]=\\\"1\\\" (click)=\\\"confirmDelete()\\\">Delete</button>\\n    <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Table: {{data.tblName | fromTableNameToTitle}}</h3>\\n  <div mat-dialog-content>\\n      <table>\\n          <tr>\\n            <th>Name</th>\\n            <th>Type</th>\\n            <th>Is Primary Key</th>\\n            <th>Nullable</th>\\n          </tr>\\n          <tr *ngFor=\\\"let item of data.columns\\\">\\n            <td>{{item.name}}</td>\\n            <td>{{item.type}} </td>\\n            <td>{{item.isPk}}</td>\\n            <td>{{item.allowNull}}</td>\\n          </tr>\\n        </table>\\n    \\n  </div>\\n\\n  <div mat-dialog-actions>\\n    <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Exit</button>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h3 mat-dialog-title>Edit Column: {{ name }}</h3>\\n\\n  <form class=\\\"mat-dialog-content\\\" (ngSubmit)=\\\"(submit)\\\" #formControl=\\\"ngForm\\\">\\n    <div class=\\\"form\\\">\\n      <mat-form-field color=\\\"accent\\\">\\n        <textarea matInput #input class=\\\"form-control\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required></textarea>\\n        <!--mat-error-- *ngIf=\\\"formControl.invalid\\\">{{\\n          getErrorMessage()\\n        }}</!--mat-error-->\\n      </mat-form-field>\\n    </div>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"{{ type }}\\\" [(ngModel)]=\\\"type\\\" name=\\\"type\\\" >\\n        <mat-option *ngFor=\\\"let item of colTypes\\\" [value]=\\\"item\\\" >{{ item }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <!--Contains mat-hint for characters count and has maxLengt set-->\\n    <div class=\\\"form\\\">\\n      <mat-slide-toggle [(ngModel)]=\\\"nullable\\\" name=\\\"nullable\\\">Nullable</mat-slide-toggle>\\n      <mat-slide-toggle [(ngModel)]=\\\"isPk\\\" name=\\\"isPk\\\">Primary Key</mat-slide-toggle>\\n    </div>\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{ tblParent }}\\\" [(ngModel)]=\\\"tblParent\\\" (selectionChange)=\\\"constraintParentTableChange(tblParent)\\\" name=\\\"tblParent\\\">\\n          <mat-option *ngFor=\\\"let item of parentTablesList\\\" [value]=\\\"item\\\">{{ item }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"{{ colParent }}\\\" [(ngModel)]=\\\"colParent\\\" name=\\\"colParent\\\">\\n          <mat-option *ngFor=\\\"let item of parentTableColumnsNames\\\" [value]=\\\"item\\\">{{ item }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div mat-dialog-actions>\\n      <button mat-button [type]=\\\"submit\\\" [disabled]=\\\"!formControl.valid\\\" [mat-dialog-close]=\\\"1\\\" (click)=\\\"stopEdit()\\\">Save</button>\\n      <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","export default \"<div class=\\\"container\\\">\\n    <h3 mat-dialog-title>Enter your github token</h3>\\n    <div mat-dialog-actions>\\n        <mat-form-field class=\\\"git-full-width\\\">\\n            <mat-label>Github token</mat-label>\\n            <input matInput [formControl]=\\\"gitToken\\\" placeholder=\\\"Enter git token\\\">\\n        </mat-form-field>\\n        <button\\n          mat-button            \\n          (click)=\\\"onDbSubmit()\\\"\\n        >\\n          Save\\n        </button>\\n        <button mat-button (click)=\\\"onNoClick()\\\" tabindex=\\\"-1\\\">Cancel</button>\\n      </div>\\n</div>\"","export default \"<div class=\\\"hr-doc-section\\\">\\n  <div *ngIf=\\\"hrDocTypsArr\\\">\\n    <h4>Welcome to Hr Docs</h4>\\n    <mat-form-field>\\n      <mat-label>Hr Document Type</mat-label>\\n      <mat-select [(value)]=\\\"hrDocTypeSelected\\\" (selectionChange)=\\\"docTypeChange(hrDocTypeSelected)\\\">\\n        <mat-option *ngFor=\\\"let hrDocType of hrDocTypsArr\\\" [value]=\\\"hrDocType\\\">\\n          {{hrDocType.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div></div>\\n\\n    <mat-form-field *ngIf=\\\"hrSubSectionTemplateArr\\\">\\n      <mat-label>Hr Subsection Template</mat-label>\\n      <mat-select [(value)]=\\\"hrSubSectionTemplateSelected\\\" (selectionChange)=\\\"subsectionTamplateChange(hrSubSectionTemplateSelected)\\\">\\n        <mat-option *ngFor=\\\"let hrSubSectionTemplate of hrSubSectionTemplateArr\\\" [value]=\\\"hrSubSectionTemplate\\\">\\n          {{hrSubSectionTemplate.title}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div></div>\\n\\n\\n    <mat-form-field *ngIf=\\\"hrSubsectionArr\\\">\\n      <mat-label>Filter Subsection</mat-label>\\n      <input matInput (keyup)=\\\"subsectionFilter($event)\\\" placeholder=\\\"Ex. ium\\\">\\n    </mat-form-field>\\n\\n    <div *ngIf=\\\"hrSubsectionArr\\\">\\n      <mat-table #table [dataSource]=\\\"hrSubsectionDataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\n\\n        <ng-container matColumnDef={{col}} *ngFor=\\\"let col of hrSubsectionColumns | removeActionCol \\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{col}}. </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element[col]}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"viewQuestions\\\">\\n        <mat-header-cell  *matHeaderCellDef > Questions </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row; let i = index\\\">\\n          <button mat-icon-button color=\\\"primary\\\">\\n            <mat-icon aria-label=\\\"View Questions\\\">visibility</mat-icon>\\n          </button>\\n        </mat-cell>\\n      </ng-container>\\n\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"hrSubsectionColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: hrSubsectionColumns;\\\"></tr>\\n      </mat-table>\\n\\n    </div>\\n  </div>\\n\\n</div>\"","export default \"<div class=\\\"tabel-view-body\\\">\\n    <mat-form-field>\\n      <input\\n        matInput\\n        (keyup)=\\\"applyFilter($event.target.value)\\\"\\n        placeholder=\\\"Search A table\\\"\\n      />\\n    </mat-form-field>\\n    <mat-accordion>\\n      <mat-expansion-panel\\n        *ngFor=\\\"let item of tablesList; let i = index\\\"\\n        [attr.data-index]=\\\"i\\\"\\n        (opened)=\\\"getTableStructure(item.name, i); item.openeds = true; loaded[i] = false;\\\"\\n        (closed)=\\\"item.openeds = false\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            {{ item.name }}\\n          </mat-panel-title>\\n          <mat-panel-description>\\n            {{ item.name | fromTableNameToTitle }}\\n          </mat-panel-description>\\n        </mat-expansion-panel-header>\\n        <mat-spinner *ngIf=\\\"item.openeds && item.colSource.length === 0\\\" ></mat-spinner>\\n        <table *ngIf=\\\"item.colSource.length\\\" mat-table matSort [dataSource]=\\\"item.colSource\\\">\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"type\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"nullable\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Nullable</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              <section class=\\\"example-section\\\">\\n                <mat-slide-toggle\\n                  class=\\\"example-margin\\\"\\n                  [color]=\\\"'accent'\\\"\\n                  [checked]=\\\"element.nullable\\\"\\n                >\\n                </mat-slide-toggle>\\n              </section>\\n            </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"isPk\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n              Is Primary Key\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              <section class=\\\"example-section\\\">\\n                <mat-slide-toggle\\n                  class=\\\"example-margin\\\"\\n                  [color]=\\\"'accent'\\\"\\n                  [checked]=\\\"element.isPk\\\"\\n                >\\n                </mat-slide-toggle>\\n              </section>\\n            </td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"relatedToTable\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>relatedToTable</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.relatedToTable }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"atColumn\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>atColumn</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.atColumn }}</td>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"fkName\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Foreign key Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{ element.fkName }}</td>\\n          </ng-container>\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n        </table>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\"","export default \"<div>\\n  <div class=\\\"create-table-container\\\"></div>\\n  <mat-form-field class=\\\"example-container\\\">\\n    <input matInput placeholder=\\\"Enter Table Name\\\" [formControl]=\\\"tableName\\\" (input)=\\\"onTableNameChange($event.target.value)\\\" required />\\n    <mat-error *ngIf=\\\"tableName.invalid\\\">{{ getErrorMessage(\\\"tableName\\\") }}</mat-error>\\n  </mat-form-field>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColPrimaryKey\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">vpn_key</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColPrimaryKey\\\" (click)=\\\"generateCol('primaryKey')\\\">\\n      Generate Primary Key\\n    </button>\\n  </div>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColCreatedAt || !generatColCreatedBy\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">create</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColCreatedAt\\\" (click)=\\\"generateCol('createdAt')\\\">Generate Created At<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">access_time</mat-icon></button>\\n    <button mat-button *ngIf=\\\"!generatColCreatedBy\\\" (click)=\\\"generateCol('createdBy')\\\">Generate Created By<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\"> person</mat-icon></button>\\n  </div>\\n  <div *ngIf=\\\"!tableName.invalid\\\" class=\\\"generaters-buttons-container\\\">\\n    <mat-icon *ngIf=\\\"!generatColUpdatedAt || !generatColUpdatedBy\\\" aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">build</mat-icon>\\n    <button mat-button *ngIf=\\\"!generatColUpdatedAt\\\" (click)=\\\"generateCol('updatedAt')\\\">Generate Updated At<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">access_time</mat-icon></button>\\n    <button mat-button *ngIf=\\\"!generatColUpdatedBy\\\" (click)=\\\"generateCol('updatedBy')\\\">Generate Updated By<mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">person</mat-icon></button>\\n  </div>\\n\\n  <mat-table #table class=\\\"table-container\\\" matSort [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.name }}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"type\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.type }}</td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"nullable\\\">\\n      <th mat-header-cell *matHeaderCellDef>Nullable</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <section class=\\\"example-section\\\">\\n          <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"'accent'\\\" (change)=\\\"element.nullable = $event.checked\\\" [checked]=\\\"element.nullable\\\"> </mat-slide-toggle>\\n        </section>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"isPk\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Is Primary Key\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <section class=\\\"example-section\\\">\\n          <mat-slide-toggle class=\\\"example-margin\\\" [color]=\\\"'accent'\\\" (change)=\\\"element.isPk = $event.checked\\\" [checked]=\\\"element.isPk\\\"> </mat-slide-toggle>\\n        </section>\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"relatedToTable\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Related To Table\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        {{ element.constraint?.tblParent }}\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"atColumn\\\">\\n      <th mat-header-cell *matHeaderCellDef>At Column</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        {{ element.constraint?.colParent }}\\n      </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"fkName\\\">\\n      <th mat-header-cell *matHeaderCellDef>\\n        Foreign key Name\\n      </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element.constraint?.name }}</td>\\n    </ng-container>\\n    <!-- actions -->\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <mat-header-cell *matHeaderCellDef>\\n        <button mat-icon-button color=\\\"primary\\\" (click)=\\\"addNew(undefined)\\\">\\n          <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon>\\n        </button>\\n      </mat-header-cell>\\n\\n      <mat-cell *matCellDef=\\\"let row; let i = index\\\">\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"startEdit(i, row.name, row.type, row.nullable, row.isPk)\\\">\\n          <mat-icon aria-label=\\\"Edit\\\">edit</mat-icon>\\n        </button>\\n\\n        <button mat-icon-button color=\\\"accent\\\" (click)=\\\"deleteItem(i, row.name, row.type, row.nullable, row.isPk, row.relatedToTable, row.atColumn, row.fkName)\\\">\\n          <mat-icon aria-label=\\\"Delete\\\">delete</mat-icon>\\n        </button>\\n      </mat-cell>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\n  </mat-table>\\n\\n  <div [hidden]=\\\"!exampleDatabase.dataChange.value.length\\\">\\n    <mat-paginator class=\\\"paginator-container\\\" #paginator [length]=\\\"exampleDatabase.dataChange.value.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"> </mat-paginator>\\n  </div>\\n\\n  <button *ngIf=\\\"exampleDatabase.dataChange.value.length && !pendingRequest\\\" class=\\\"generate-table-btn\\\" mat-button (click)=\\\"generateTable()\\\" color=\\\"red\\\">\\n    generate table\\n  </button>\\n  <mat-spinner *ngIf=\\\"pendingRequest\\\" class=\\\"progress-spinner-btn\\\"></mat-spinner>\\n</div>\\n\"","export default \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <button mat-icon-button disabled></button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n    </mat-tree-node>\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n        <mat-progress-bar *ngIf=\\\"node.isLoading\\\" mode=\\\"indeterminate\\\" class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\n    </mat-tree-node>\\n</mat-tree>\"","export default \"<mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n    <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <button mat-icon-button disabled></button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n    </mat-tree-node>\\n    <mat-tree-node *matTreeNodeDef=\\\"let node; when: hasChild\\\" matTreeNodePadding>\\n        <button mat-icon-button [attr.aria-label]=\\\"'toggle ' + node.filename\\\" matTreeNodeToggle>\\n            <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n            </mat-icon>\\n        </button>\\n        <p (click)=\\\"tableClicked(node.item)\\\">{{node.item | fromTableNameToTitle}}</p>\\n        <mat-progress-bar *ngIf=\\\"node.isLoading\\\" mode=\\\"indeterminate\\\" class=\\\"example-tree-progress-bar\\\"></mat-progress-bar>\\n    </mat-tree-node>\\n</mat-tree>\"","export default \"\"","export default \"<mat-tab-group  mat-stretch-tabs>\\n  <mat-tab label=\\\"List view\\\"> \\n    <app-list-tables></app-list-tables>\\n </mat-tab>\\n  <mat-tab label=\\\"Parent To Childrens\\\"> \\n     <app-parent-to-childs></app-parent-to-childs>\\n  </mat-tab>\\n  <mat-tab label=\\\"Children To Parent\\\">\\n      <app-child-to-parents></app-child-to-parents>\\n  </mat-tab>\\n</mat-tab-group>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NewTableComponent } from './new-table/new-table.component';\n\nimport { AppComponent } from './app.component';\nimport { TablesViewComponent } from './tables-view/tables-view.component';\nimport { RelationsComponent } from './relations/relations.component';\nimport { HrDocumentGeneratorComponent } from './hr-document-generator/hr-document-generator.component';\n\n\nconst routes: Routes = [\n  { path: 'new-table', component: NewTableComponent },\n  { path: 'relations', component: RelationsComponent },\n  { path: 'hr-docs', component: HrDocumentGeneratorComponent },\n\n  { path: '**', component: TablesViewComponent },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".toolbar {\\n  background-color: #18516b !important;\\n}\\nmat-list-item:hover mat-icon {\\n  display: block;\\n}\\n:host ::ng-deep a[_ngcontent-mva-c0],\\na[_ngcontent-mva-c0]:visited,\\na[_ngcontent-mva-c0]:hover {\\n  color: black;\\n  text-decoration: none;\\n}\\n.mat-icon {\\n  fill: black;\\n  color: black;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9hcHAuY29tcG9uZW50Lmxlc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFBO0FDQ0Y7QURFQTtFQUNJLGNBQUE7QUNBSjtBREdFOzs7RUFDRSxZQUFBO0VBQ0EscUJBQUE7QUNDSjtBREVFO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b29sYmFye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQsIDgxLCAxMDcpICFpbXBvcnRhbnQ7XG59XG5cbm1hdC1saXN0LWl0ZW06aG92ZXIgbWF0LWljb257XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgXG4gIDpob3N0IDo6bmctZGVlcCBhW19uZ2NvbnRlbnQtbXZhLWMwXSwgYVtfbmdjb250ZW50LW12YS1jMF06dmlzaXRlZCwgYVtfbmdjb250ZW50LW12YS1jMF06aG92ZXIge1xuICAgIGNvbG9yOiBibGFjaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbiAgXG4gIC5tYXQtaWNvbiB7XG4gICAgZmlsbDogYmxhY2s7XG4gICAgY29sb3I6IGJsYWNrO1xuICB9IiwiLnRvb2xiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTg1MTZiICFpbXBvcnRhbnQ7XG59XG5tYXQtbGlzdC1pdGVtOmhvdmVyIG1hdC1pY29uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG46aG9zdCA6Om5nLWRlZXAgYVtfbmdjb250ZW50LW12YS1jMF0sXG5hW19uZ2NvbnRlbnQtbXZhLWMwXTp2aXNpdGVkLFxuYVtfbmdjb250ZW50LW12YS1jMF06aG92ZXIge1xuICBjb2xvcjogYmxhY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5tYXQtaWNvbiB7XG4gIGZpbGw6IGJsYWNrO1xuICBjb2xvcjogYmxhY2s7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DbConnectComponent } from './db-connect/db-connect.component';\nimport { DataService } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  title = ' Erd';\n\n  constructor(public dialog: MatDialog, public dataService: DataService) {\n  }\n\n    ngOnInit() {\n      if (localStorage.getItem('pgConnOptHost') === null) {\n        const dialogRef = this.dialog.open(DbConnectComponent, {\n          data: { 'this.pgConnOpt': '' }\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n          this.fillPgConectOptionFromLocalStorage();\n        });\n      } else {\n        this.fillPgConectOptionFromLocalStorage();\n      }\n    }\n\n    fillPgConectOptionFromLocalStorage() {\n      this.dataService.pgConnect = {\n        user: localStorage.getItem('pgConnOptUser'),\n        password: localStorage.getItem('pgConnOptPassword'),\n        host: localStorage.getItem('pgConnOptHost'),\n        database: localStorage.getItem('pgConnOptDatabase')\n      };\n    }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { TablesViewComponent } from './tables-view/tables-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Angular Material Components\nimport { MatTreeModule } from '@angular/material/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { FromTableNameToTitlePipe } from './from-table-name-to-title.pipe';\nimport { NewTableComponent } from './new-table/new-table.component';\nimport { ColumnComponent } from './column/column.component';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AddDialogComponent } from './dialogs/add/add.dialog.component';\nimport { EditDialogComponent } from './dialogs/edit/edit.dialog.component';\nimport { DeleteDialogComponent } from './dialogs/delete/delete.dialog.component';\nimport { DataService } from './services/data.service';\nimport { FromNumberTypeToErdStructurePipe } from './from-number-type-to-erd-structure.pipe';\nimport { RelationsComponent } from './relations/relations.component';\nimport { ParentToChildsComponent, ParentToChildsDynamicDatabase } from './relations/parent-to-childs/parent-to-childs.component';\nimport { ChildToParentsComponent, ChildToParentsDynamicDatabase } from './relations/child-to-parents/child-to-parents.component';\nimport { DisplayTableDialogComponent } from './dialogs/displayTable/displayTable.dialog.component';\nimport { LocationStrategy, HashLocationStrategy, CommonModule } from '@angular/common';\nimport { ListTablesComponent } from './list-tables/list-tables.component';\nimport { HrDocumentGeneratorComponent } from './hr-document-generator/hr-document-generator.component';\nimport { TableValuePipe } from './table-value.pipe';\nimport { DbConnectComponent } from './db-connect/db-connect.component';\nimport { RemoveActionColPipe } from './remove-action-col.pipe';\nimport { GitTokenComponent } from './git-token/git-token.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TablesViewComponent,\n    FromTableNameToTitlePipe,\n    NewTableComponent,\n    ColumnComponent,\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent,\n    FromNumberTypeToErdStructurePipe,\n    RelationsComponent,\n    ParentToChildsComponent,\n    ChildToParentsComponent,\n    DisplayTableDialogComponent,\n    ListTablesComponent,\n    HrDocumentGeneratorComponent,\n    TableValuePipe,\n    DbConnectComponent,\n    RemoveActionColPipe,\n    GitTokenComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    BrowserAnimationsModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTreeModule,\n    MatSortModule,\n    MatPaginatorModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteDialogComponent,\n    DisplayTableDialogComponent,\n    DbConnectComponent,\n    GitTokenComponent\n  ],\n  providers: [DataService, ParentToChildsDynamicDatabase, ChildToParentsDynamicDatabase,\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    { provide: MatDialogRef, useValue: {} }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \".column-container {\\n  padding-top: 20px;\\n  display: flex;\\n  flex-direction: row;\\n}\\nmat-form-field {\\n  margin-left: 20px;\\n  margin-right: 10px;\\n}\\n.index-column {\\n  width: 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUNDSjtBRENFO0VBQ0UsaUJBQUE7RUFDQSxrQkFBQTtBQ0NKO0FERUU7RUFDRSxXQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9jb2x1bW4vY29sdW1uLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbHVtbi1jb250YWluZXIge1xuICAgIHBhZGRpbmctdG9wOiAyMHB4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICBtYXQtZm9ybS1maWVsZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICB9XG5cbiAgLmluZGV4LWNvbHVtbntcbiAgICB3aWR0aDogMjBweDtcbiAgfSIsIi5jb2x1bW4tY29udGFpbmVyIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5tYXQtZm9ybS1maWVsZCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG4uaW5kZXgtY29sdW1uIHtcbiAgd2lkdGg6IDIwcHg7XG59XG4iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ErdStructure } from 'src/entities/tableGeneratorStructure';\nimport * as types from 'src/entities/tableGeneratorStructure';\nimport { GetterService } from '../services/getter.service';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-column',\n  templateUrl: './column.component.html',\n  styleUrls: ['./column.component.less']\n})\nexport class ColumnComponent implements OnInit {\n  @Output() submitedCol: EventEmitter<types.Column> = new EventEmitter();\n  @Input() receivedCol: types.Column | undefined;\n  @Input() colIndex: number;\n  erdStrct: ErdStructure;\n  colTypes: any[] = [];\n\n  submited: boolean;\nid: number;\n  name: string;\n  type: string;\n  isPk = false;\n  nullable = false;\n  tblParent: string;\n  colParent: string;\n\n  colName = new FormControl('', [Validators.required]);\n  constraint: types.Constraint = undefined;\n\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  constructor(private gtService: GetterService, private dataService: DataService) {}\n\n  ngOnInit() {\n    if (this.receivedCol !== undefined) {\n      this.name = this.receivedCol.name;\n      this.type =  this.receivedCol.type;\n      this.isPk = this.receivedCol.isPk;\n      this.nullable = this.receivedCol.nullable;\n      if (this.receivedCol.constraint !== undefined) {\n        this.name = this.receivedCol.constraint.name;\n        this.tblParent = this.receivedCol.constraint.tblParent;\n        this.colParent = this.receivedCol.constraint.colParent;\n      }\n    }\n\n    this.colTypes = types.TypeScriptTypesArray;\n    this.getParentTablesName('');\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getErrorMessage(fieldName: string) {\n    // tslint:disable-next-line: max-line-length\n    return this[fieldName].hasError('required') ? 'You must enter a ' + fieldName : this[fieldName].hasError(fieldName) ? 'Not a valid ' + fieldName : '';\n  }\n\n  constraintParentTableChange(tblName: string) {\n    console.log(tblName);\n    this.getTableStructure(tblName);\n  }\n\n  submitColumn() {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint =  {\n          name : '',\n          tblParent : this.tblParent,\n          colParent : this.colParent\n        };\n      }\n      this.submited = true;\n      this.submitedCol.emit(col);\n    }\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RiLWNvbm5lY3QvZGItY29ubmVjdC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit, Inject, Optional } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Component({\n  selector: 'app-db-connect',\n  templateUrl: './db-connect.component.html',\n  styleUrls: ['./db-connect.component.less']\n})\nexport class DbConnectComponent implements OnInit {\n  pgConnect: PGConnectionOption;\n  dbHost = new FormControl(localStorage.getItem('pgConnOptHost'), [Validators.required]);\n  dbName = new FormControl(localStorage.getItem('pgConnOptDatabase'), [Validators.required]);\n  dbUser = new FormControl(localStorage.getItem('pgConnOptUser'), [Validators.required]);\n  dbPassword = new FormControl(localStorage.getItem('pgConnOptPassword'), [Validators.required]);\n\n  constructor(public dialogRef: MatDialogRef<DbConnectComponent>, @Optional() @Inject(MAT_DIALOG_DATA) public data: any) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  onDbSubmit() {\n    localStorage.setItem('pgConnOptUser', this.dbUser.value);\n    localStorage.setItem('pgConnOptPassword', this.dbPassword.value);\n    localStorage.setItem('pgConnOptHost', this.dbHost.value);\n    localStorage.setItem('pgConnOptDatabase', this.dbName.value);\n    this.pgConnect = {\n      database: this.dbName.value,\n      host: this.dbHost.value,\n      password: this.dbPassword.value,\n      user: this.dbUser.value\n    };\n    this.dialogRef.close(this.pgConnect);\n  }\n}\n","import { TypeScriptTypesArray } from './../../../entities/tableGeneratorStructure';\nimport { GetterService } from './../../services/getter.service';\nimport { GeneratorService } from './../../services/generator.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Column } from 'src/entities/tableGeneratorStructure';\nimport * as types from 'src/entities/tableGeneratorStructure';\n\n@Component({\n  selector: 'app-add.dialog',\n  templateUrl: '../../dialogs/add/add.dialog.html',\n  styleUrls: ['../../dialogs/add/add.dialog.css']\n})\n\nexport class AddDialogComponent {\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: Column,\n              public dataService: DataService, public gtService: GetterService) {\n\n    console.log(data);\n    this.getParentTablesName('');\n    this.name = data['column'].name;\n    this.type = data['column'].type;\n    this.isPk = data['column'].isPk;\n    this.nullable = data['column'].nullable;\n    if (data['column'].constraint) {\n      this.tblParent = data['column'].constraint.tblParent,\n        this.colParent = data['column'].constraint.colParent;\n    }\n\n\n  }\n  colTypes = TypeScriptTypesArray;\n  name = '';\n  type = '';\n  nullable = false;\n  isPk = false;\n  tblParent = '';\n  colParent = '';\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName,this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  constraintParentTableChange(tblName: string) {\n    console.log(tblName);\n    this.getTableStructure(tblName);\n  }\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint = {\n          name: '',\n          tblParent: this.tblParent,\n          colParent: this.colParent\n        };\n      }\n\n      this.dataService.addColumn(col);\n    }\n  }\n\n  submitColumn() {\n\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9hZGQvYWRkLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLXdpZHRoOiA0NTBweDtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLXRvcDogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICBmb250LXNpemU6IDE2cHg7XG4gIGZsZXgtZ3JvdzogMTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-delete.dialog',\n  templateUrl: '../../dialogs/delete/delete.dialog.html',\n  styleUrls: ['../../dialogs/delete/delete.dialog.css']\n})\nexport class DeleteDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<DeleteDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteColumn(this.data.id);\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZGlhbG9ncy9kZWxldGUvZGVsZXRlLmRpYWxvZy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cbiJdfQ== */\"","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject} from '@angular/core';\nimport {DataService} from '../../services/data.service';\n\n\n@Component({\n  selector: 'app-display-table.dialog',\n  templateUrl: '../../dialogs/displayTable/displayTable.dialog.html',\n  styleUrls: ['../../dialogs/displayTable/displayTable.dialog.css']\n})\nexport class DisplayTableDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<DisplayTableDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.dataService.deleteColumn(this.data.id);\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\ntable {\\n  font-family: arial, sans-serif;\\n  border-collapse: collapse;\\n  width: 100%;\\n}\\n\\ntd, th {\\n  border: 1px solid #dddddd;\\n  text-align: left;\\n  padding: 8px;\\n}\\n\\ntr:nth-child(even) {\\n  background-color: #dddddd;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kaXNwbGF5VGFibGUvZGlzcGxheVRhYmxlLmRpYWxvZy5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtFQUN6QixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3MvZGlzcGxheVRhYmxlL2Rpc3BsYXlUYWJsZS5kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbnRhYmxlIHtcbiAgZm9udC1mYW1pbHk6IGFyaWFsLCBzYW5zLXNlcmlmO1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICB3aWR0aDogMTAwJTtcbn1cblxudGQsIHRoIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZGRkZDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG50cjpudGgtY2hpbGQoZXZlbikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkZGRkO1xufSJdfQ== */\"","import { TypeScriptTypesArray } from './../../../entities/tableGeneratorStructure';\nimport { GetterService } from './../../services/getter.service';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as types from 'src/entities/tableGeneratorStructure';\n\n@Component({\n  selector: 'app-baza.dialog',\n  templateUrl: '../../dialogs/edit/edit.dialog.html',\n  styleUrls: ['../../dialogs/edit/edit.dialog.css']\n})\nexport class EditDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<EditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService, public gtService: GetterService) {\n    this.getParentTablesName('');\n    this.name = data['column'].name;\n    this.type = data['column'].type;\n    this.isPk = data['column'].isPk;\n    this.nullable = data['column'].nullable;\n    if (data['column'].constraint) {\n      this.fkName =  data['column'].constraint.name,\n      this.tblParent = data['column'].constraint.tblParent,\n        this.colParent = data['column'].constraint.colParent;\n    }\n  }\n  colTypes = TypeScriptTypesArray;\n\n  name = '';\n  type = '';\n  nullable = false;\n  isPk = false;\n  tblParent = '';\n  colParent = '';\n  fkName = '';\n  parentTablesList: string[] = [];\n  parentTableColumnsNames: string[] = [];\n  formControl = new FormControl('', [\n    Validators.required\n  ]);\n\n\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' :\n      this.formControl.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n  getTableStructure(tblName: string): void {\n    this.gtService.getTableStructure(tblName,this.dataService.pgConnect).subscribe(data => {\n      this.parentTableColumnsNames = data.tableCol.map(x => x.name);\n    });\n  }\n  getParentTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      this.parentTablesList = data.tablesName.filter(tblName => tblName.includes(filterKeyword));\n    });\n  }\n  constraintParentTableChange(tblName: string) {\n    this.getTableStructure(tblName);\n  }\n  submit() {\n    // emppty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    if (!this.name) {\n      console.log('column name is empty');\n    } else if (!this.type) {\n      console.log('column type is empty');\n    } else if (this.constraintValid() === -1) {\n      console.log('constraint is not valid');\n    } else {\n      this.type = this.type;\n      const col: types.Column = {\n        name: this.name,\n        type: this.type,\n        isPk: this.isPk,\n        nullable: this.nullable,\n        constraint: undefined\n      };\n      if (this.constraintValid() === 1) {\n        col.constraint = {\n          name: this.fkName,\n          tblParent: this.tblParent,\n          colParent: this.colParent\n        };\n      }\n\n\n      this.dataService.updateColumn(col);\n    }\n  }\n\n  constraintValid(): number {\n    let isValid = -1;\n    if (this.tblParent && this.colParent) {\n      isValid = 1;\n    } else if (!this.tblParent && !this.colParent) {\n      isValid = 0;\n    }\n    return isValid;\n  }\n}\n","export default \".container {\\n  display: flex;\\n  flex-direction: column;\\n  min-width: 450px;\\n}\\n\\n.container > * {\\n  width: 100%;\\n}\\n\\n.form {\\n  display: flex;\\n  padding-top: 6px;\\n}\\n\\n.mat-form-field {\\n  font-size: 16px;\\n  flex-grow: 1;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9lZGl0L2VkaXQuZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2dzL2VkaXQvZWRpdC5kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG1pbi13aWR0aDogNDUwcHg7XG59XG5cbi5jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5mb3JtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgcGFkZGluZy10b3A6IDZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmbGV4LWdyb3c6IDE7XG59XG4iXX0= */\"","import { Pipe, PipeTransform } from '@angular/core';\nimport { TypeScriptTypesArray } from 'src/entities/tableGeneratorStructure';\n\n@Pipe({\n  name: 'fromNumberTypeToErdStructure'\n})\nexport class FromNumberTypeToErdStructurePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    const num = parseInt(value, 10);\n    return TypeScriptTypesArray[num];\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'fromTableNameToTitle'\n})\nexport class FromTableNameToTitlePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    const titleWords = value.split('_');\n    let title = '';\n    for (const word of titleWords) {\n      const newWord = word.charAt(0).toUpperCase() + word.slice(1);\n      title += newWord + ' ';\n    }\n    return title;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dpdC10b2tlbi9naXQtdG9rZW4uY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Optional, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-git-token',\n  templateUrl: './git-token.component.html',\n  styleUrls: ['./git-token.component.less']\n})\nexport class GitTokenComponent implements OnInit {\n  gitToken = new FormControl(localStorage.getItem('githubToken'), [Validators.required]);\n  constructor(public dialogRef: MatDialogRef<GitTokenComponent>, @Optional() @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n  }\n  onNoClick() {\n    this.dialogRef.close();\n  }\n  onDbSubmit() {\n    localStorage.setItem('githubToken', this.gitToken.value);\n    this.dialogRef.close(this.gitToken.value);\n  }\n\n}\n","export default \".db-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n.db-full-width {\\n  width: 100%;\\n}\\n:host ::ng-deep.mat-form-field-infix {\\n  width: 500px;\\n}\\n:host ::ng-deep.mat-header-cell {\\n  padding-left: 20px;\\n}\\n:host ::ng-deep.mat-cell {\\n  padding-left: 20px;\\n}\\n.hr-doc-section {\\n  background-color: #f3f1f1;\\n  width: 50%;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9oci1kb2N1bWVudC1nZW5lcmF0b3IvaHItZG9jdW1lbnQtZ2VuZXJhdG9yLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9oci1kb2N1bWVudC1nZW5lcmF0b3IvaHItZG9jdW1lbnQtZ2VuZXJhdG9yLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUNDRjtBREVBO0VBQ0UsV0FBQTtBQ0FGO0FER0E7RUFDRSxZQUFBO0FDREY7QURHQTtFQUNFLGtCQUFBO0FDREY7QURJQTtFQUNFLGtCQUFBO0FDRkY7QURLQTtFQUNFLHlCQUFBO0VBQ0UsVUFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0hKIiwiZmlsZSI6InNyYy9hcHAvaHItZG9jdW1lbnQtZ2VuZXJhdG9yL2hyLWRvY3VtZW50LWdlbmVyYXRvci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYi1mb3JtIHtcbiAgbWluLXdpZHRoOiAxNTBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5kYi1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbjpob3N0IDo6bmctZGVlcC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XG4gIHdpZHRoOiA1MDBweDtcbn1cbjpob3N0IDo6bmctZGVlcC5tYXQtaGVhZGVyLWNlbGx7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbn1cblxuOmhvc3QgOjpuZy1kZWVwLm1hdC1jZWxse1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG59XG5cbi5oci1kb2Mtc2VjdGlvbntcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjFmMTtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cblxuIiwiLmRiLWZvcm0ge1xuICBtaW4td2lkdGg6IDE1MHB4O1xuICBtYXgtd2lkdGg6IDUwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cbi5kYi1mdWxsLXdpZHRoIHtcbiAgd2lkdGg6IDEwMCU7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LWZvcm0tZmllbGQtaW5maXgge1xuICB3aWR0aDogNTAwcHg7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LWhlYWRlci1jZWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuOmhvc3QgOjpuZy1kZWVwLm1hdC1jZWxsIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xufVxuLmhyLWRvYy1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjFmMTtcbiAgd2lkdGg6IDUwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbn1cbiJdfQ== */\"","import { Component, OnInit, ViewChild, NgModule } from '@angular/core';\nimport { HRDocumentType, PGConnectionOption, HRSubsectionTemplate, HRSubsection } from '../Entities/hr';\nimport { HrService } from '../services/hr.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { DbConnectComponent } from '../db-connect/db-connect.component';\nimport { CommonModule } from '@angular/common';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-hr-document-generator',\n  templateUrl: './hr-document-generator.component.html',\n  styleUrls: ['./hr-document-generator.component.less']\n})\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [HrDocumentGeneratorComponent]\n\n})\nexport class HrDocumentGeneratorComponent implements OnInit {\n  pgConnOpt: PGConnectionOption;\n\n  hrDocTypsArr: HRDocumentType[];\n  hrDocTypeSelected: HRDocumentType;\n\n  hrSubSectionTemplateArr: HRSubsectionTemplate[];\n  hrSubSectionTemplateSelected: HRSubsectionTemplate;\n\n  hrSubsectionArr: HRSubsection[];\n  hrSubsectionDataSource = new MatTableDataSource(this.hrSubsectionArr);\n  hrSubsectionSelected: HRSubsection;\n  hrSubsectionColumns: string[] = [];\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  filterCols = ['template_id', 'created_at', 'is_name_editable', 'is_question_editable', 'settings', 'order_num', 'section', 'type'];\n  constructor(private hrService: HrService, public dialog: MatDialog, public dataService: DataService) { }\n\n  ngOnInit() {\n    this.pgConnOpt = this.dataService.pgConnect;\n    this.onDbSubmit();\n  }\n\n\n\nonDbSubmit() {\n\n  this.hrService.getHrDocumentType(this.pgConnOpt).subscribe(data => {\n    this.hrDocTypsArr = data;\n  });\n}\n\ndocTypeChange(hrDocTypeSelected: HRDocumentType) {\n  console.log(hrDocTypeSelected);\n  this.hrService.getHrSubsectionTemplateByDocumentTypeId(this.pgConnOpt, hrDocTypeSelected.id).subscribe(data => {\n    this.hrSubSectionTemplateArr = data;\n  });\n}\n\nsubsectionTamplateChange(hrSubsectionTemplate: HRSubsectionTemplate) {\n  console.log(hrSubsectionTemplate);\n  this.hrService.getHrSubsectionByHrSubsectionTemplateId(this.pgConnOpt, hrSubsectionTemplate.id).subscribe(data => {\n    this.hrSubsectionArr = data;\n    this.hrSubsectionDataSource = new MatTableDataSource(this.hrSubsectionArr);\n\n    this.hrSubsectionColumns = Object.keys(this.hrSubsectionArr[0]).reduce((accumulator, currentValue) => {\n      if (this.filterCols.filter(x => x === currentValue).length) {\n        return accumulator;\n      } else {\n        accumulator.push(currentValue);\n        return accumulator;\n      }\n    }, []);\n    this.hrSubsectionColumns.push('viewQuestions');\n    this.hrSubsectionDataSource.sort = this.sort;\n  });\n}\n\nsubsectionChange(hrSubsection: HRSubsection) {\n  console.log(hrSubsection);\n}\n\nsubsectionFilter(event: Event) {\n  const filterValue = (event.target as HTMLInputElement).value;\n  this.hrSubsectionDataSource.filter = filterValue.trim().toLowerCase();\n}\n\n}\n","export default \"tr td {\\n  padding-right: 10px !important;\\n}\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n.tabel-view-body {\\n  background-color: #f3f1f1;\\n  width: 50%;\\n  margin: 0 auto;\\n  border-radius: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9saXN0LXRhYmxlcy9saXN0LXRhYmxlcy5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvbGlzdC10YWJsZXMvbGlzdC10YWJsZXMuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFUSw4QkFBQTtBQ0FSO0FESUU7RUFDRSxhQUFBO0VBQ0EscUJBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNGSjtBRElFO0VBQ0UseUJBQUE7RUFDQSxVQUFBO0VBRUEsY0FBQTtFQUNBLGtCQUFBO0FDSEoiLCJmaWxlIjoic3JjL2FwcC9saXN0LXRhYmxlcy9saXN0LXRhYmxlcy5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbInRye1xuICAgIHRke1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG4gIFxuICAuZXhhbXBsZS1zZWN0aW9uIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNjBweDtcbiAgfVxuICAudGFiZWwtdmlldy1ib2R5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmM2YxZjE7XG4gICAgd2lkdGg6IDUwJTtcbiAgXG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBcbiAgfVxuICAiLCJ0ciB0ZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHggIWltcG9ydGFudDtcbn1cbi5leGFtcGxlLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogNjBweDtcbn1cbi50YWJlbC12aWV3LWJvZHkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmMWYxO1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { GetterService } from '../services/getter.service';\nimport { MatPaginator, MatTableDataSource } from '@angular/material';\nimport { DataService } from '../services/data.service';\nimport { element } from 'protractor';\n\nexport interface ColumnElement {\n  name: string;\n  type: string;\n  nullable: boolean;\n  isPk: boolean;\n  relatedToTable: string;\n  atColumn: string;\n  fkName: string;\n}\n\nconst ELEMENT_DATA: ColumnElement[] = [];\n\n@Component({\n  selector: 'app-list-tables',\n  templateUrl: './list-tables.component.html',\n  styleUrls: ['./list-tables.component.less']\n})\nexport class ListTablesComponent implements OnInit {\n  tablesList = [];\n  displayedColumns: string[] = ['name', 'type', 'nullable', 'isPk', 'relatedToTable', 'atColumn', 'fkName'];\n  colSource = new MatTableDataSource<ColumnElement>(ELEMENT_DATA);\n  openeds = {};\n  loaded = {};\n\n  constructor(private gtService: GetterService, private dataService: DataService) { }\n\n  ngOnInit() {\n    this.getTablesName('');\n  }\n  getTablesName(filterKeyword: string) {\n    this.gtService.getTablesName(this.dataService.pgConnect).subscribe(data => {\n      data.tablesName.filter(tblName => tblName.includes(filterKeyword)).forEach(element => {\n        const tbl = {\n          name: element,\n          colSource: new MatTableDataSource<ColumnElement>(ELEMENT_DATA),\n          openeds: false\n        };\n        this.tablesList.push(tbl);\n      });\n    });\n  }\n\n  getTableStructure(tblName: string, index: number): void {\n    this.loaded[index] = true;\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(data => {\n      this.tablesList.forEach(tbl => {\n        if (tbl.name === tblName) {\n          tbl.colSource = data.tableCol;\n          console.log(tbl.colSource.length);\n        }\n      });\n    });\n  }\n\n  applyFilter(evt) {\n    this.getTablesName(evt);\n  }\n}\n","export default \"td,\\nth {\\n  padding: 20px !important;\\n  text-align: center !important;\\n}\\n.create-table-container {\\n  display: flex;\\n  flex-direction: row;\\n  width: 30%;\\n}\\n.example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n.example-container > * {\\n  width: 30%;\\n}\\n.example-container form {\\n  margin-bottom: 20px;\\n}\\n.example-container form > * {\\n  margin: 5px 0;\\n}\\n.example-container .mat-radio-button {\\n  margin: 0 12px;\\n}\\n.table-container {\\n  width: 100%;\\n  margin: 0 auto;\\n  padding-left: 25%;\\n}\\n:host ::ng-deep.mat-paginator-container {\\n  justify-content: center !important;\\n}\\n.paginator-container {\\n  width: 100% !important;\\n  margin: 0 auto !important;\\n}\\n.add-table-container {\\n  width: 80%;\\n  margin: 0 auto;\\n}\\n.generate-table-btn {\\n  margin-top: 37px;\\n  width: 14%;\\n  /* margin: 0 auto; */\\n  font-size: 24px;\\n  background-color: #d01b58;\\n  color: white;\\n  margin-left: 43%;\\n}\\n.progress-spinner-btn {\\n  margin-top: 37px;\\n  width: 14%;\\n  /* margin: 0 auto; */\\n  font-size: 24px;\\n  color: white;\\n  margin-left: 43%;\\n}\\n.generaters-buttons-container {\\n  display: flex;\\n  flex-direction: row;\\n  width: 50%;\\n  margin: 0 auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phY29iL3Byb2plY3RzL21lZGZseXRfZXJkX2dlbmVyYXRvcl9mcm9udC9NZWRmbHl0RXJkR2VuZXJhdG9yRnJvbnQvc3JjL2FwcC9uZXctdGFibGUvbmV3LXRhYmxlLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9uZXctdGFibGUvbmV3LXRhYmxlLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUNFLHdCQUFBO0VBQ0EsNkJBQUE7QUNFRjtBREFBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtBQ0VGO0FEQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtBQ0VGO0FEQ0E7RUFDRSxVQUFBO0FDQ0Y7QURFQTtFQUNFLG1CQUFBO0FDQUY7QURHQTtFQUNFLGFBQUE7QUNERjtBRElBO0VBQ0UsY0FBQTtBQ0ZGO0FESUE7RUFDRSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDRkY7QURLQTtFQUNFLGtDQUFBO0FDSEY7QURLQTtFQUNFLHNCQUFBO0VBQ0EseUJBQUE7QUNIRjtBRE1BO0VBQ0UsVUFBQTtFQUNBLGNBQUE7QUNKRjtBRE1BO0VBQ0UsZ0JBQUE7RUFDQSxVQUFBO0VDSkEsb0JBQW9CO0VETXBCLGVBQUE7RUFDQSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0pGO0FET0E7RUFDRSxnQkFBQTtFQUNBLFVBQUE7RUNMQSxvQkFBb0I7RURPcEIsZUFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0xGO0FET0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtBQ0xGIiwiZmlsZSI6InNyYy9hcHAvbmV3LXRhYmxlL25ldy10YWJsZS5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbInRkLCB0aHtcbiAgcGFkZGluZzogMjBweCAhaW1wb3J0YW50O1xuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbn1cbi5jcmVhdGUtdGFibGUtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgd2lkdGg6IDMwJTtcbn1cbi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgPiAqIHtcbiAgd2lkdGg6IDMwJTtcbn1cblxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgZm9ybSA+ICoge1xuICBtYXJnaW46IDVweCAwO1xufVxuXG4uZXhhbXBsZS1jb250YWluZXIgLm1hdC1yYWRpby1idXR0b24ge1xuICBtYXJnaW46IDAgMTJweDtcbn1cbi50YWJsZS1jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMjUlO1xufVxuXG46aG9zdCA6Om5nLWRlZXAubWF0LXBhZ2luYXRvci1jb250YWluZXJ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4ucGFnaW5hdG9yLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIG1hcmdpbjogMCBhdXRvICFpbXBvcnRhbnQ7XG5cbn1cbi5hZGQtdGFibGUtY29udGFpbmVyIHtcbiAgd2lkdGg6IDgwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uZ2VuZXJhdGUtdGFibGUtYnRuIHtcbiAgbWFyZ2luLXRvcDogMzdweDtcbiAgd2lkdGg6IDE0JTtcbiAgLyogbWFyZ2luOiAwIGF1dG87ICovXG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QwMWI1ODtcbiAgY29sb3I6IHdoaXRlO1xuICBtYXJnaW4tbGVmdDogNDMlO1xufVxuXG4ucHJvZ3Jlc3Mtc3Bpbm5lci1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4uZ2VuZXJhdGVycy1idXR0b25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuIiwidGQsXG50aCB7XG4gIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4uY3JlYXRlLXRhYmxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiAzMCU7XG59XG4uZXhhbXBsZS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMzAlO1xufVxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0ge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuLmV4YW1wbGUtY29udGFpbmVyIGZvcm0gPiAqIHtcbiAgbWFyZ2luOiA1cHggMDtcbn1cbi5leGFtcGxlLWNvbnRhaW5lciAubWF0LXJhZGlvLWJ1dHRvbiB7XG4gIG1hcmdpbjogMCAxMnB4O1xufVxuLnRhYmxlLWNvbnRhaW5lciB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1sZWZ0OiAyNSU7XG59XG46aG9zdCA6Om5nLWRlZXAubWF0LXBhZ2luYXRvci1jb250YWluZXIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xufVxuLnBhZ2luYXRvci1jb250YWluZXIge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICBtYXJnaW46IDAgYXV0byAhaW1wb3J0YW50O1xufVxuLmFkZC10YWJsZS1jb250YWluZXIge1xuICB3aWR0aDogODAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5nZW5lcmF0ZS10YWJsZS1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDAxYjU4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4ucHJvZ3Jlc3Mtc3Bpbm5lci1idG4ge1xuICBtYXJnaW4tdG9wOiAzN3B4O1xuICB3aWR0aDogMTQlO1xuICAvKiBtYXJnaW46IDAgYXV0bzsgKi9cbiAgZm9udC1zaXplOiAyNHB4O1xuICBjb2xvcjogd2hpdGU7XG4gIG1hcmdpbi1sZWZ0OiA0MyU7XG59XG4uZ2VuZXJhdGVycy1idXR0b25zLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIHdpZHRoOiA1MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuIl19 */\"","import { Constraint } from './../../entities/tableGeneratorStructure';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material';\nimport { Column, ErdStructure, TypeScriptTypesArray } from 'src/entities/tableGeneratorStructure';\nimport { GeneratorService } from '../services/generator.service';\nimport { ColumnElement } from '../list-tables/list-tables.component';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../services/data.service';\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { AddDialogComponent } from '../dialogs/add/add.dialog.component';\nimport { EditDialogComponent } from '../dialogs/edit/edit.dialog.component';\nimport { DeleteDialogComponent } from '../dialogs/delete/delete.dialog.component';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { GitTokenComponent } from '../git-token/git-token.component';\n\nexport interface ColumnElement {\n  id: number;\n  name: string;\n  type: string;\n  nullable: boolean;\n  isPk: boolean;\n  fkName: string;\n  relatedToTable: string;\n  atColumn: string;\n}\n\n\n@Component({\n  selector: 'app-new-table',\n  templateUrl: './new-table.component.html',\n  styleUrls: ['./new-table.component.less']\n})\n\nexport class NewTableComponent implements OnInit {\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private generatorService: GeneratorService, public httpClient: HttpClient, public dialog: MatDialog, public dataService: DataService) {\n  }\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  githubToken: string;\n  tableName = new FormControl('', [Validators.required]);\n  columns: any[] = [];\n  newColClicked = false;\n  generatColUpdatedAt = false;\n  generatColUpdatedBy = false;\n  generatColCreatedAt = false;\n  generatColCreatedBy = false;\n  generatColPrimaryKey = false;\n  exampleDatabase: DataService | null;\n  dataSource: ExampleDataSource | null;\n\n\n  index: number;\n  id: number;\n  name: string;\n  displayedColumns: string[] = ['name', 'type', 'nullable', 'isPk', 'relatedToTable', 'atColumn', 'fkName', 'actions'];\n  pendingRequest = false;\n  ngOnInit(): void {\n    if (localStorage.getItem('githubToken') === null) {\n      const dialogRef = this.dialog.open(GitTokenComponent, {\n        data: { githubToken: '' }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        this.fillPgConectOptionFromLocalStorage();\n        this.loadData();\n      });\n    } else {\n      this.fillPgConectOptionFromLocalStorage();\n      this.loadData();\n    }\n\n    this.loadData();\n  }\n  fillPgConectOptionFromLocalStorage() {\n    this.githubToken = localStorage.getItem('githubToken');\n  }\n  refresh() {\n    this.loadData();\n  }\n\n  generateTemplate(erdStrct: ErdStructure): void {\n    this.pendingRequest = true;\n    this.generatorService.generateTemplate(erdStrct).subscribe(data => {\n      const blob = new Blob([data], { type: 'application/zip' });\n      const url = window.URL.createObjectURL(blob);\n      window.open(url);\n      this.pendingRequest = false;\n    });\n  }\n\n  getErrorMessage(fieldName: string) {\n    // tslint:disable-next-line: max-line-length\n    return this[fieldName].hasError('required') ? 'You must enter a ' + fieldName : this[fieldName].hasError(fieldName) ? 'Not a valid ' + fieldName : '';\n  }\n\n  onTableNameChange(searchValue: string): void {\n  }\n\n\n  constraintValid(col: Column): boolean {\n    let valid = false;\n    if (col.constraint && col.constraint.tblParent && col.constraint.colParent) {\n      valid = true;\n    }\n    return valid;\n  }\n\n\n  generateCol(colGnrtd): void {\n    const generatedColElement: ColumnElement = {\n      name: '',\n      type: '4',\n      nullable: false,\n      isPk: false,\n      fkName: undefined,\n      relatedToTable: undefined,\n      atColumn: undefined\n    };\n\n    const colGenerated: Column = {\n      name: '',\n      type: '',\n      nullable: false,\n      isPk: false,\n      constraint: undefined\n    };\n\n\n    if (colGnrtd === 'createdAt') {\n      this.generatColCreatedAt = true;\n      generatedColElement.name = 'created_at';\n      generatedColElement.type = 'INSTANT';\n    } else if (colGnrtd === 'createdBy') {\n      this.generatColCreatedBy = true;\n      generatedColElement.name = 'created_by';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.fkName = this.tableName.value + '_to_agency_member_fk';\n      generatedColElement.relatedToTable = 'agency_member';\n      generatedColElement.atColumn = 'id';\n      colGenerated.constraint = {\n        name: generatedColElement.fkName,\n        tblParent: generatedColElement.relatedToTable,\n        colParent: generatedColElement.atColumn\n      };\n    } else if (colGnrtd === 'updatedAt') {\n      this.generatColUpdatedAt = true;\n      generatedColElement.name = 'updated_at';\n      generatedColElement.type = 'INSTANT';\n    } else if (colGnrtd === 'updatedBy') {\n      this.generatColUpdatedBy = true;\n      generatedColElement.name = 'updated_by';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.fkName = this.tableName.value + '_to_agency_member_fk';\n      generatedColElement.relatedToTable = 'agency_member';\n      generatedColElement.atColumn = 'id';\n      colGenerated.constraint = {\n        name: generatedColElement.fkName,\n        tblParent: generatedColElement.relatedToTable,\n        colParent: generatedColElement.atColumn\n      };\n    } else if (colGnrtd === 'primaryKey') {\n      this.generatColPrimaryKey = true;\n      generatedColElement.name = 'id';\n      generatedColElement.type = 'INTEGER';\n      generatedColElement.isPk = true;\n    }\n    colGenerated.name = generatedColElement.name;\n    colGenerated.type = generatedColElement.type;\n    colGenerated.nullable = generatedColElement.nullable;\n    colGenerated.isPk = generatedColElement.isPk;\n\n\n    this.exampleDatabase.dataChange.value.push(colGenerated);\n    this.refreshTable();\n\n\n  }\n\n  generateTable() {\n    const newTableErdStructure = new ErdStructure();\n    newTableErdStructure.tblName = this.tableName.value;\n    newTableErdStructure.githubToken = this.githubToken;\n    newTableErdStructure.columns = [];\n\n    for (const row of this.exampleDatabase.dataChange.value) {\n\n      const col: Column = {\n        name: row.name,\n        type: row.type,\n        isPk: row.isPk,\n        nullable: row.nullable,\n        constraint: undefined\n      };\n      col.constraint = row.constraint;\n\n      newTableErdStructure.columns.push(col);\n    }\n    this.generateTemplate(newTableErdStructure);\n  }\n\n\n\n\n\n  stringToEnum<ET, T>(enumObj: ET, str: keyof ET): T {\n    return enumObj[str as string];\n  }\n\n  addNew(column: Column) {\n    if (column === undefined) {\n      column = {\n        name: '',\n        type: '',\n        isPk: false,\n        nullable: false,\n        constraint: {\n          name: '',\n          tblParent: '',\n          colParent: ''\n        },\n      };\n    }\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      data: { column }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      if (result === 1) {\n        column = this.dataService.getDialogData();\n        if (this.constraintValid(column)) {\n          column.constraint.name = this.tableName.value + '_' +\n          column.name + '_to_' +\n          column.constraint.tblParent + '_' +\n          column.constraint.colParent + '_fk';\n        }\n        // After dialog is closed we're doing frontend updates\n        // For add we're just pushing a new row inside DataService\n        this.exampleDatabase.dataChange.value.push(column);\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  startEdit(i: number, name: string, type: string, nullable: boolean, isPk: boolean) {\n    // index row is used just for debugging proposes and can be removed\n    this.index = i;\n    const column: Column = {\n      name,\n      type,\n      isPk,\n      nullable,\n      constraint: {\n        name: '',\n        tblParent: '',\n        colParent: ''\n      },\n    };\n    if (this.constraintValid(this.exampleDatabase.dataChange.value[this.index])) {\n      column.constraint = {\n        name: this.exampleDatabase.dataChange.value[this.index].constraint.name,\n        tblParent: this.exampleDatabase.dataChange.value[this.index].constraint.tblParent,\n        colParent: this.exampleDatabase.dataChange.value[this.index].constraint.colParent\n      };\n    }\n\n    console.log(this.index);\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      data: { column }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const columnInserted = this.dataService.getDialogData();\n        if (this.constraintValid(columnInserted)) {\n          columnInserted.constraint.name = this.tableName.value + '_' +\n            columnInserted.name + '_to_' +\n            columnInserted.constraint.tblParent + '_' +\n            columnInserted.constraint.colParent + '_fk';\n        }\n\n        // When using an edit things are little different, firstly we find record inside DataService by id\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.name === this.name);\n        // Then you update that record using data from dialogData (values you enetered)\n        this.exampleDatabase.dataChange.value[this.index] = columnInserted;\n        // And lastly refresh table\n        this.refreshTable();\n      }\n    });\n  }\n\n  deleteItem(i: number,\n             name: string,\n             type: string,\n             nullable: boolean,\n             isPk: boolean,\n             relatedToTable: string,\n             atColumn: string,\n             fkName: string) {\n    this.index = i;\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { name, type, nullable, isPk, relatedToTable, atColumn, fkName }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(x => x.name === this.name);\n        // for delete we use splice in order to remove single object from DataService\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\n        this.refreshTable();\n      }\n    });\n  }\n\n\n  private refreshTable() {\n    this.paginator._changePageSize(this.paginator.pageSize);\n  }\n\n  public loadData() {\n    this.exampleDatabase = new DataService(this.httpClient);\n    this.dataSource = new ExampleDataSource(this.exampleDatabase, this.paginator, this.sort);\n  }\n\n}\n\n\nexport class ExampleDataSource extends DataSource<Column> {\n  filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this.filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this.filterChange.next(filter);\n  }\n\n  filteredData: Column[] = [];\n  renderedData: Column[] = [];\n\n  constructor(public exampleDatabase: DataService, public paginator: MatPaginator, public sort: MatSort) {\n    super();\n\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Column[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this.exampleDatabase.dataChange,\n      this.paginator.page,\n      this.filterChange,\n\n\n    ];\n\n    this.exampleDatabase.getAllColumns();\n\n\n    return merge(...displayDataChanges).pipe(map(() => {\n      // Filter data\n      this.filteredData = this.exampleDatabase.data.slice().filter((column: Column) => {\n        const searchStr = (column.name + column.type + column.isPk + column.nullable).toLowerCase();\n        return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n      });\n\n      // Sort filtered data\n      const sortedData = this.sortData(this.filteredData.slice());\n\n      // Grab the page's slice of the filtered sorted data.\n      const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n      this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n      return this.renderedData;\n\n\n      return this.renderedData;\n    }\n    ));\n  }\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Column[]): Column[] {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: number | string = '';\n      let propertyB: number | string = '';\n\n      switch (this.sort.active) {\n        case 'name': [propertyA, propertyB] = [a.name, b.name]; break;\n        case 'type': [propertyA, propertyB] = [a.type, b.type]; break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (valueA < valueB ? -1 : 1) * (this.sort.direction === 'asc' ? 1 : -1);\n    });\n  }\n\n  disconnect() { }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9jaGlsZC10by1wYXJlbnRzL2NoaWxkLXRvLXBhcmVudHMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { GetterService } from '../../services/getter.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material';\nimport { DeleteDialogComponent } from 'src/app/dialogs/delete/delete.dialog.component';\nimport { DisplayTableDialogComponent } from 'src/app/dialogs/displayTable/displayTable.dialog.component';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-child-to-parents',\n  templateUrl: './child-to-parents.component.html',\n  styleUrls: ['./child-to-parents.component.less']\n})\nexport class ChildToParentsComponent implements OnInit {\n\n  dataSource: DynamicDataSource;\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n  relationsDictionary = {};\n\n  constructor(private gtService: GetterService, private database: ChildToParentsDynamicDatabase,\n              public dialog: MatDialog, private dataService: DataService) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.dataSource.data = this.database.initialData(rltDic.childToParentsDictionary);\n    });\n  }\n\n  ngOnInit() {\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.relationsDictionary = rltDic;\n    });\n  }\n\n  tableClicked(tblName): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(columns => {\n      this.displayTable(tblName, columns.tableCol);\n    });\n  }\n\n  displayTable(tblName: string, columns: any[]) {\n   this.dialog.open(DisplayTableDialogComponent, {data: {tblName, columns}});\n  }\n\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n}\n\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level = 1, public expandable = false,\n              public isLoading = false) { }\n}\n\n/**\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the database.\n */\nexport class ChildToParentsDynamicDatabase {\n  dataMap = new Map<string, string[]>();\n\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\n\n  /** Initial data from database */\n  initialData(relationsTableDictionary): DynamicFlatNode[] {\n    for (const prntTbl of Object.keys(relationsTableDictionary)) {\n      this.dataMap.set(prntTbl, relationsTableDictionary[prntTbl]);\n    }\n\n    this.rootLevelNodes = Object.keys(relationsTableDictionary);\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this._treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private _treeControl: FlatTreeControl<DynamicFlatNode>,\n              private _database: ChildToParentsDynamicDatabase) { }\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this._treeControl.expansionModel.onChange.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n        (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this._database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this._database.isExpandable(name)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n          && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, 1000);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9wYXJlbnQtdG8tY2hpbGRzL3BhcmVudC10by1jaGlsZHMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { GetterService } from '../../services/getter.service';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { CollectionViewer, SelectionChange } from '@angular/cdk/collections';\nimport { map } from 'rxjs/operators';\nimport { DisplayTableDialogComponent } from 'src/app/dialogs/displayTable/displayTable.dialog.component';\nimport { MatDialog } from '@angular/material';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-parent-to-childs',\n  templateUrl: './parent-to-childs.component.html',\n  styleUrls: ['./parent-to-childs.component.less']\n})\nexport class ParentToChildsComponent implements OnInit {\n\n  constructor(private gtService: GetterService, private database: ParentToChildsDynamicDatabase,\n              public dialog: MatDialog, private dataService: DataService) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.dataSource.data = this.database.initialData(rltDic.parentToChildsDictionary);\n    });\n  }\n\n\n  relationsDictionary = {};\n\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n\n  dataSource: DynamicDataSource;\n\n  ngOnInit() {\n    this.gtService.getRealtions(this.dataService.pgConnect).subscribe(rltDic => {\n\n      this.relationsDictionary = rltDic;\n    });\n  }\n\n  tableClicked(tblName): void {\n    this.gtService.getTableStructure(tblName, this.dataService.pgConnect).subscribe(columns => {\n      this.displayTable(tblName, columns.tableCol);\n    });\n  }\n\n  displayTable(tblName: string, columns: any[]) {\n    this.dialog.open(DisplayTableDialogComponent, { data: { tblName, columns } });\n  }\n\n  getLevel = (node: DynamicFlatNode) => node.level;\n\n  isExpandable = (node: DynamicFlatNode) => node.expandable;\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => _nodeData.expandable;\n}\n\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level = 1, public expandable = false,\n              public isLoading = false) { }\n}\n\n/**\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the database.\n */\nexport class ParentToChildsDynamicDatabase {\n  dataMap = new Map<string, string[]>();\n\n  rootLevelNodes: string[] = ['Fruits', 'Vegetables'];\n\n  /** Initial data from database */\n  initialData(relationsTableDictionary): DynamicFlatNode[] {\n    for (const prntTbl of Object.keys(relationsTableDictionary)) {\n      this.dataMap.set(prntTbl, relationsTableDictionary[prntTbl]);\n    }\n\n    this.rootLevelNodes = Object.keys(relationsTableDictionary);\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n              private database: ParentToChildsDynamicDatabase) { }\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.onChange.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n        (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach(node => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.slice().reverse().forEach(node => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this.database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        let count = 0;\n        for (let i = index + 1; i < this.data.length\n          && this.data[i].level > node.level; i++ , count++) { }\n        this.data.splice(index + 1, count);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, 1000);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlbGF0aW9ucy9yZWxhdGlvbnMuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-relations',\n  templateUrl: './relations.component.html',\n  styleUrls: ['./relations.component.less']\n})\nexport class RelationsComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeActionCol'\n})\nexport class RemoveActionColPipe implements PipeTransform {\n\n  transform(items: string[], ...args: any[]): any {\n    items = items.reduce((acc, curr) => {\n      if (curr !== 'viewQuestions') {\n        acc.push(curr);\n      } else {}\n      return acc;\n    }, []);\n    return items;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Column } from 'src/entities/tableGeneratorStructure';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Injectable()\nexport class DataService {\n  private readonly API_URL = 'https://api.github.com/repos/angular/angular/issues';\n\n  pgConnect: PGConnectionOption;\n  dataChange: BehaviorSubject<Column[]> = new BehaviorSubject<Column[]>([]);\n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor(private httpClient: HttpClient) { }\n\n  get data(): Column[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /** CRUD METHODS */\n  getAllColumns(): void {\n    this.dataChange;\n\n\n  }\n\n  // DEMO ONLY, you can find working methods below\n  addColumn(col: Column): void {\n    this.dialogData = col;\n  }\n\n  updateColumn(col: Column): void {\n    this.dialogData = col;\n  }\n\n  deleteColumn(id: number): void {\n    console.log(id);\n  }\n}\n\n\n\n/* REAL LIFE CRUD Methods I've used in my projects. ToasterService uses Material Toasts for displaying messages:\n\n    // ADD, POST METHOD\n    addItem(kanbanItem: KanbanItem): void {\n    this.httpClient.post(this.API_URL, kanbanItem).subscribe(data => {\n      this.dialogData = kanbanItem;\n      this.toasterService.showToaster('Successfully added', 3000);\n      },\n      (err: HttpErrorResponse) => {\n      this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n    });\n   }\n\n    // UPDATE, PUT METHOD\n     updateItem(kanbanItem: KanbanItem): void {\n    this.httpClient.put(this.API_URL + kanbanItem.id, kanbanItem).subscribe(data => {\n        this.dialogData = kanbanItem;\n        this.toasterService.showToaster('Successfully edited', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n\n  // DELETE METHOD\n  deleteItem(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe(data => {\n      console.log(data['']);\n        this.toasterService.showToaster('Successfully deleted', 3000);\n      },\n      (err: HttpErrorResponse) => {\n        this.toasterService.showToaster('Error occurred. Details: ' + err.name + ' ' + err.message, 8000);\n      }\n    );\n  }\n*/\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneratorService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  postGenerateTamplateUrl = this.headUrl + 'create_template';\n\n  constructor(private http: HttpClient) {}\n\n  generateTemplate(tblParams: any): Observable<any>  {\n    return this.http.post(this.postGenerateTamplateUrl, tblParams, {\n      responseType: 'arraybuffer'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { PGConnectionOption } from '../Entities/hr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetterService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  getTablesUrl = this.headUrl + 'get_tables';\n  getTableStructureUrl = this.headUrl + 'get_table_structure';\n  getRelationsUrl = this.headUrl + 'get_relations';\n  constructor(private http: HttpClient) { }\n  /* development porpose\n    mokeTblList: Observable<string[]> = new Observable<string[]>();\n     mokeColList: Observable<string[]> = new Observable<string[]>();\n     */\n  getTablesName(pgConn: PGConnectionOption): Observable<any> {\n    /* development porpose\n      const simpleObservable = new Observable((observer) => {\n      observer.next({tablesName : ['tbl1','tbl2','tbl3']});\n        observer.complete();\n      });\n      return simpleObservable;*/\n    return this.http.get(this.getTablesUrl + `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n\n  }\n\n  getTableStructure(tblName: string, pgConn: PGConnectionOption): Observable<any> {\n    /* development porpose\n     const simpleObservable = new Observable((observer) => {\n       observer.next({tableCol : [{name: 'id'}, {name: 'a'}, {name: 'b'}]});\n        observer.complete();\n     });\n\n     return simpleObservable;*/\n    return this.http.get(this.getTableStructureUrl + `?tblName=${tblName}&username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n  getRealtions(pgConn: PGConnectionOption): Observable<any> {\n    return this.http.get(this.getRelationsUrl +\n      `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HRDocumentType, PGConnectionOption, HRSubsectionTemplate, HRSubsection } from '../Entities/hr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HrService {\n  host = 'http://localhost';\n  port = '5000';\n  headUrl = this.host + ':' + this.port + '/api/';\n\n  getHrDocsTypeUrl = this.headUrl + 'hr_doc_type';\n  getHrSubsectionTemplateByDocumentTypeIdUrl = this.headUrl + 'hr_subsection_template_by_doc_type_id';\n  getHrSubsectionByHrSubsectionTemplateIdUrl = this.headUrl + 'hr_subsection_by_subsection_template_id';\n\n  constructor(private http: HttpClient) { }\n\n  getHrDocumentType(pgConn: PGConnectionOption): Observable<HRDocumentType[]> {\n    return this.http.get<HRDocumentType[]>(this.getHrDocsTypeUrl +\n      `?username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n  getHrSubsectionTemplateByDocumentTypeId(pgConn: PGConnectionOption, hrDocumentTypeId: number): Observable<HRSubsectionTemplate[]> {\n    return this.http.get<HRSubsectionTemplate[]>(this.getHrSubsectionTemplateByDocumentTypeIdUrl +\n      `?docTypeId=${hrDocumentTypeId}&username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n  getHrSubsectionByHrSubsectionTemplateId(pgConn: PGConnectionOption, hrSubsectionTemplateId: number): Observable<HRSubsection[]> {\n    return this.http.get<HRSubsection[]>(this.getHrSubsectionByHrSubsectionTemplateIdUrl +\n      `?subsectionTemplateId=${hrSubsectionTemplateId}\n      &username=${pgConn.user}&password=${pgConn.password}&host=${pgConn.host}&dbName=${pgConn.database}`);\n  }\n\n\n}\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tableValue'\n})\nexport class TableValuePipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if (value instanceof Date) {\n      console.log(`its a date`);\n    }\n    return value;\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYmxlcy12aWV3L3RhYmxlcy12aWV3LmNvbXBvbmVudC5sZXNzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tables-view',\n  templateUrl: './tables-view.component.html',\n  styleUrls: ['./tables-view.component.less']\n})\nexport class TablesViewComponent implements OnInit {\n  constructor() {\n\n  }\n\n  ngOnInit() {\n  }\n}\n","export class ErdStructure {\n  githubToken: string = undefined;\n  tblName: string = undefined;\n  columns: Column[];\n}\n\nexport class Column {\n  name: string;\n  type: string;\n  isPk: boolean;\n  nullable: boolean;\n  constraint: Constraint;\n}\n\nexport class Constraint {\n  name: string;\n  tblParent: string;\n  colParent: string;\n}\n\nexport let TypeScriptTypesArray = ['INTEGER', 'TEXT', 'BOOLEAN', 'LOCALDATE', 'INSTANT', 'JSONB'];\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}